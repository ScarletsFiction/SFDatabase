{"version":3,"sources":["_head.js","IDB.js","WebSQL.js","SQL.js","_foot.js"],"names":["SFDatabase","databaseName","options","onConnected","scope","this","db","pending","initialized","databaseStructure","console","warn","structure","debug","initFinish","setTimeout","resumePending","pendingTimer","clearTimeout","length","i","splice","destroyObject","obj","Array","objKeys","Object","keys","preprocessTable","preprocessData","tableName","mode","object","found","isNode","process","execPath","onStructureInitialize","checkStructure","callback","table","queued","reduceQueue","error","createTable","IDBStructure","initError","onVersionChange","ev","result","IDBWhere","data","rules","ORCondition","currentCondition","rules_","matches","match","check","toLowerCase","rule","operationCondition","undefined","indexOf","likeCode","regexed","rule_","a","temp","slice","replace","regexEscape","push","exist","RegExp","join","dbStructure","IDBLimit","query","processed","startFrom","limit","findIndexRange","where","index","objectStore","range","constructor","String","key","split","rangeBuilder","openCursor","prepareQuery","action","errorCallback","getObjectStore","e","target","LIMIT","ORDER","order","request","opt","val","IDBKeyRange","upperBound","lowerBound","bound","only","columns","successCallback","objectStoreNames","contains","text","columns_","createObjectStore","keyPath","autoIncrement","col","createIndex","unique","insert","duplicated","objectStoreRequest","add","onerror","onsuccess","has","cursor","value","continue","onScanning","write","direction","UNIQUE","req","get","select","operation","code","delete","store","clear","update","drop","deleteObjectStore","closeDatabase","close","IDBQueryBuilder","window","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","webkitIDBKeyRange","msIDBKeyRange","storage","reopen","websql","open","idbVersion","onupgradeneeded","onversionchange","transaction","WebSQLStructure","validateText","makeWhere","comparator","children","wheres","objectData","defaultConditional","specialList","isNaN","msg","type","concat","Number","Boolean","name","likes","test","haveRelation","childs","stack","toUpperCase","where_","SQLQuery","select_","rows","objectName","objectName_","object_","JSON","parse","stringify","polyfill","message","SQLQueryBuilder","values","tx","executeSql","res","readOnly","rowsAffected","initializeTable","disablePlugin","sqlitePlugin","openDatabase","location","error_","IDBOpenDBRequest","module","exports"],"mappings":"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","file":"SFDatabase.min.js","sourcesContent":["/*\r\n\tScarletsFiction Database Library\r\n\tA simple database library for browser and nodejs\r\n\thttps://github.com/ScarletsFiction/SFDatabase-js\r\n\t\r\n\tMake sure you include this header on this script\r\n*/\r\n\r\n'use strict';\r\nfunction SFDatabase(databaseName, options, onConnected){\r\n\tvar scope = this;\r\n\tscope.db = null;\r\n\tscope.pending = [];\r\n\tscope.initialized = false;\r\n\tif(options.databaseStructure)\r\n\t\tconsole.warn('`options.databaseStructure` is deprecated, please use `options.structure` instead.');\r\n\r\n\tif(!options.structure)\r\n\t\toptions.structure = options.databaseStructure;\r\n\r\n\tif(!options)\r\n\t\toptions = {debug:false};\r\n\r\n\tvar initFinish = function(){\r\n\t\tif(scope.initialized) return;\r\n\t\tscope.initialized = true;\r\n\r\n\t\tif(onConnected){\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(!onConnected(resumePending))\r\n\t\t\t\t\tresumePending();\r\n\t\t\t}, 1);\r\n\t\t}\r\n\t\telse resumePending();\r\n\t}\r\n\r\n\tvar pendingTimer = -1;\r\n\tvar resumePending = function(){\r\n\t\tif(!scope.db){\r\n\t\t\tclearTimeout(pendingTimer);\r\n\t\t\tpendingTimer = setTimeout(resumePending, 1000);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!scope.pending.length) return;\r\n\t\tfor (var i = 0; i < scope.pending.length; i++) {\r\n\t\t\tscope.pending[i]();\r\n\t\t}\r\n\t\tscope.pending.splice(0);\r\n\t}\r\n\r\n\tvar destroyObject = function(obj){\r\n\t\tif(!obj || typeof obj !== 'object') return;\r\n\t\tif(obj instanceof Array)\r\n\t\t\tobj.splice(0);\r\n\t\telse {\r\n\t\t\tvar objKeys = Object.keys(obj);\r\n\t\t\tfor (var i = 0; i < objKeys.length; i++) {\r\n\t\t\t\tdelete obj[objKeys[i]];\r\n\t\t\t}\r\n\t\t}\r\n\t\tobj = null;\r\n\t}\r\n\r\n\tscope.preprocessTable = {}; // {tableName:{columnName:{set:function, get:function}}}}\r\n\tvar preprocessData = function(tableName, mode, object){\r\n\t\tvar found = false;\r\n\t\tif(!scope.preprocessTable[tableName]) return found;\r\n\r\n\t\tvar keys = Object.keys(scope.preprocessTable[tableName]);\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tif(!object[keys[i]] || !scope.preprocessTable[tableName][keys[i]][mode])\r\n\t\t\t\tcontinue;\r\n\t\t\tobject[keys[i]] = scope.preprocessTable[tableName][keys[i]][mode](object[keys[i]]);\r\n\t\t\tfound = true;\r\n\t\t}\r\n\t\treturn found;\r\n\t}\r\n\r\n\tvar isNode = typeof process !== 'undefined' && process.execPath;\r\n\tif(!isNode){\r\n\t\tvar onStructureInitialize = null;\r\n\t\tvar checkStructure = function(callback){\r\n\t\t\tvar table = Object.keys(options.structure);\r\n\r\n\t\t\tvar queued = table.length;\r\n\t\t\tvar reduceQueue = function(){\r\n\t\t\t\tqueued--;\r\n\t\t\t\tif(queued === 0){\r\n\t\t\t\t\tif(!callback) initFinish(scope);\r\n\t\t\t\t\telse callback();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(queued > 1)\r\n\t\t\t\t\tconsole.error(\"Failed to initialize\", queued, \"database structure\");\r\n\t\t\t}, 5000);\r\n\r\n\t\t\tfor (var i = 0; i < table.length; i++) {\r\n\t\t\t\tscope.createTable(table[i], options.structure[table[i]], reduceQueue);\r\n\t\t\t}\r\n\r\n\t\t\tif(onStructureInitialize){\r\n\t\t\t\tonStructureInitialize();\r\n\t\t\t\tonStructureInitialize = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// Load all query builder from here","if(!isNode && !options.websql){\r\n\tIDBStructure(function(e){\r\n\t\tif(typeof IDBOpenDBRequest !== 'function'){\r\n\t\t\t// Fallback to WebSQL\r\n\t\t\tconsole.warn(\"Fallback to WebSQL\", e);\r\n\t\t\treturn WebSQLStructure();\r\n\t\t}\r\n\r\n\t\tconsole.error(e.target.error);\r\n\t});\r\n}\r\n\r\nfunction IDBStructure(initError){\r\n\tIDBQueryBuilder();\r\n\r\n\tif(!window.indexedDB)\r\n  \t\twindow.indexedDB = window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n\tif(!window.IDBTransaction)\r\n\t\twindow.IDBTransaction = window.webkitIDBTransaction || window.msIDBTransaction;\r\n\tif(!window.IDBKeyRange)\r\n\t\twindow.IDBKeyRange = window.webkitIDBKeyRange || window.msIDBKeyRange;\r\n\r\n\tif(!window.indexedDB || !window.IDBTransaction || !window.IDBKeyRange){\r\n\t\tif(initError) initError('IndexedDB was not found');\r\n\t\treturn;\r\n\t}\r\n\r\n\tscope.storage = 'indexeddb';\r\n\tscope.reopen = function(){\r\n\t\tonStructureInitialize = function(){\r\n\t\t\tif(!options.websql){ // IndexedDB\r\n\t\t\t\tvar db = scope.db.objectStoreNames;\r\n\t\t\t\tfor (var i = 0; i < db.length; i++) {\r\n\t\t\t\t\tif(options.structure[db[i]] === void 0)\r\n\t\t\t\t\t\tscope.drop(db[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tonStructureInitialize = null;\r\n\t\t};\r\n\r\n\t\tscope.db = window.indexedDB.open(databaseName, options.idbVersion || 1);\r\n\t\tscope.db.onupgradeneeded = scope.db.onversionchange = onVersionChange;\r\n\t\tscope.db.onerror = console.error;\r\n\t\tscope.db.onsuccess = function(ev){\r\n\t\t\tif(scope.db.result){\r\n\t\t\t\tscope.db = scope.db.result;\r\n\t\t\t\tscope.db.onerror = console.error;\r\n\t\t\t}\r\n\r\n\t\t\tinitFinish(scope);\r\n\t\t};\r\n\t}\r\n\r\n\tscope.reopen();\r\n\tfunction onVersionChange(ev){\r\n\t\tif(scope.db.result)\r\n\t\t\tscope.db = scope.db.result;\r\n\r\n\t\tcheckStructure(function(){});\r\n\t}\r\n\r\n\t//action = readwrite, readonly\r\n\tscope.getObjectStore = function(tableName, action, errorCallback){\r\n\t\ttry{\r\n  \t\t\tvar transaction = scope.db.transaction(tableName, action);\r\n\t\t}catch(e){\r\n\t\t\tif(errorCallback) errorCallback(e)\r\n\t\t\treturn;\r\n\t\t}\r\n  \t\ttransaction.onerror = errorCallback || console.error;\r\n  \t\treturn transaction.objectStore(tableName);\r\n\t}\r\n}","if(!isNode && options.websql === undefined) options.websql = true;\r\nif(options.websql){\r\n\tWebSQLStructure(function(){\r\n\t\t// Fallback to IndexedDB\r\n\t\tconsole.warn(\"Fallback to IndexedDB\");\r\n\t\tIDBStructure();\r\n\t});\r\n}\r\n\r\nfunction WebSQLStructure(initError){\r\n\tSQLQueryBuilder();\r\n\r\n\tscope.SQLQuery = function(query, values, successCallback, errorCallback){\r\n\t\tif(options.debug) options.debug(query, values);\r\n\r\n\t\tscope.db.transaction(function(tx){\r\n\t\t\ttx.executeSql(query, values, function(tx, res){\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(successCallback){\r\n\t\t\t\t\tvar readOnly = res && res.rows ? res.rows : res; // SQLResultSetRowList is immutable\r\n\t\t\t\t\tif(res && res.rowsAffected && !readOnly.length){\r\n\t\t\t\t\t\tsuccessCallback(res.rowsAffected);\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(readOnly.length){\r\n\t\t\t\t\t\tvar result = {length:readOnly.length};\r\n\t\t\t\t\t\tfor (var i = 0; i < readOnly.length; i++) {\r\n\t\t\t\t\t\t\tresult[i] = readOnly[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\tsuccessCallback(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse successCallback([]);\r\n\t            }\r\n\t\t\t}, function(tx, error){\r\n\t\t\t\tvar msg = 'Database Error: ' + error.message;\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\t\telse console.error(msg);\r\n\t\t\t});\r\n\t\t}, function(error){\r\n\t\t\tvar msg = 'Database Transaction Error: ' + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction initializeTable(disablePlugin){\r\n\t\tif(!disablePlugin && window.sqlitePlugin){\r\n\t\t\tscope.db = window.sqlitePlugin.openDatabase({name: databaseName, location: 'default'}, checkStructure, function(){\r\n\t\t\t\tconsole.error_(\"Failed to initialize sqlitePlugin\");\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tinitializeTable(true);\r\n\t\t\t\t}, 500);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if(window.openDatabase){\r\n\t\t\tscope.db = window.openDatabase(databaseName, \"1.0\", databaseName, 1024);\r\n\t\t\tif(scope.db) setTimeout(checkStructure, 500);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.error('WebSQL is not supported on this browser');\r\n\t\t\tif(initError) initError();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeTable();\r\n}","function SQLQueryBuilder(){\r\n\t// structure must have `scope.SQLQuery`\r\n\r\n\tfunction validateText(text){\r\n\t\tvar matches = text.match(/[a-zA-Z0-9_\\.]+/i);\r\n\t\treturn '`'+matches[0]+'`';\r\n\t}\r\n\r\n\t//{('AND', 'OR'), 'ORDER':{columnName:'ASC', 'DESC'}, 'LIMIT':[startIndex, rowsLimit]}\r\n\r\n\t// ex: [\"AND\"=>[\"id\"=>12, \"OR\"=>[\"name#1\"=>\"myself\", \"name\"=>\"himself\"]], \"LIMIT\"=>1]\r\n\t\t// Select one where (id == 12 && (name == \"myself\" || name == \"himself\"))\r\n\tscope.makeWhere = function(object, comparator, children){\r\n\t\tif(!object) return ['', []];\r\n\t\tvar wheres = [];\r\n\r\n\t\tvar objectData = [];\r\n\t\tvar columns = Object.keys(object);\r\n\t\tvar defaultConditional = ' AND ';\r\n\t\tvar specialList = ['order', 'limit'];\r\n\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tvar value = object[columns[i]];\r\n\r\n\t\t\tvar matches = columns[i].match(/([a-zA-Z0-9_\\.]+)(\\[(\\>\\=?|\\<\\=?|\\!|\\<\\>|\\>\\<|\\!?~)\\])?/);\r\n\t\t\tvar check = matches[1].toLowerCase();\r\n\t\t\tif(check==='and' || check==='or') continue;\r\n\t\t\tif(!children && specialList.indexOf(check)!==-1) continue;\r\n\r\n\t\t\tif(matches[3]){\r\n\t\t\t\tif((['>', '>=', '<', '<=']).indexOf(matches[3])!==-1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!isNaN(value))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twheres.push(matches[1] + ' ' + matches[3] + ' ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvar msg = 'SQL where: value of ' + matches[1] + ' is non-numeric and can\\'t be accepted';\r\n\t\t\t\t\t\tconsole.error(msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(matches[3] === '!')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar type = value === null || value === undefined ? false : value.constructor;\r\n\t\t\t\t\tif(!type)\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IS NOT NULL');\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(type === Array){\r\n\t\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' NOT IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse if(type === Number || type === Boolean || type === String){\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' != ?');\r\n\t\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type.name + ' can\\'t be accepted');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (matches[3] === '~' || matches[3] === '!~')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(value.constructor !== Array){\r\n\t\t\t\t\t\tvalue = [value];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar likes = [];\r\n\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\tlikes.push(matches[1] + (matches[3] === '!~' ? ' NOT' : '') + ' LIKE ?');\r\n\t\t\t\t\t\tif(value.indexOf('%') === -1) value[a] = '%'+value[a]+'%';\r\n\t\t\t\t\t\tobjectData.push(value[a]);\r\n\t\t\t\t\t}\r\n\r\n                    wheres.push('('+likes.join(' OR ')+')');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar type = value === null || value === undefined ? false : value.constructor;\r\n\t\t\t\tif(!type)\r\n\t\t\t\t\twheres.push(matches[1] + ' IS NULL');\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(type === Array){\r\n\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(type === Number || type === Boolean || type === String){\r\n\t\t\t\t\t\twheres.push(matches[1] + ' = ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type.name + ' can\\'t be accepted');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < columns.length; i++) {\r\n\t\t\tif(columns[i]==='ORDER'||columns[i]==='LIMIT')\r\n                continue;\r\n\r\n\t\t\tvar test = columns[i].split('AND');\r\n\t\t\tvar haveRelation = false;\r\n\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\tdefaultConditional = ' AND ';\r\n\t\t\t\thaveRelation = true;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttest = columns[i].split('OR');\r\n\t\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\t\tdefaultConditional = ' OR ';\r\n\t\t\t\t\thaveRelation = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(haveRelation){\r\n\t\t\t\tvar childs = scope.makeWhere(object[columns[i]], defaultConditional, true);\r\n\t\t\t\twheres.push('('+childs[0]+')');\r\n\t\t\t\tobjectData = objectData.concat(childs[1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar options = '';\r\n\t\tif(object['ORDER']){\r\n\t\t\tvar columns = Object.keys(object['ORDER']);\r\n\t\t\tvar stack = [];\r\n\t\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\t\tvar order = object['ORDER'][columns[i]].toUpperCase();\r\n\t\t\t\tif(order !== 'ASC' && order !== 'DESC') continue;\r\n\t\t\t\tstack.push(validateText(columns[i]) + ' ' + order);\r\n\t\t\t}\r\n\t\t\toptions = options + ' ORDER BY ' + stack.join(', ');\r\n\t\t}\r\n\t\tif(object['LIMIT']){\r\n\t\t\tif(!isNaN(object['LIMIT'][0]) && !isNaN(object['LIMIT'][1])){\r\n\t\t\t\toptions = options + ' LIMIT ' + object['LIMIT'][1] + ' OFFSET ' + object['LIMIT'][0];\r\n\t\t\t}\r\n\t\t\telse if(!isNaN(object['LIMIT'])){\r\n\t\t\t\toptions = options + ' LIMIT '+ object['LIMIT'];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar where_ = '';\r\n\t\tif(wheres.length!==0){\r\n\t\t\tif(!children)\r\n\t\t\t\twhere_ = \" WHERE \";\r\n\t\t\twhere_ = where_ + wheres.join(comparator ? comparator : defaultConditional);\r\n\t\t}\r\n\r\n\t\treturn [where_ + options, objectData];\r\n\t}\r\n\r\n\tscope.createTable = function(tableName, columns, successCallback, errorCallback){\r\n\t\tvar columns_ = Object.keys(columns);\r\n\t\tfor(var i = 0; i < columns_.length; i++){\r\n\t\t\tif(columns_[i][0] === '$')\r\n\t\t\t\tcolumns_[i] = columns_[i].slice(1);\r\n\r\n\t\t\tif(columns[columns_[i]].constructor === Array)\r\n\t\t\t\tcolumns_[i] = validateText(columns_[i]) + ' ' + columns[columns_[i]].join(' ').toUpperCase();\r\n\t\t\telse\r\n\t\t\t\tcolumns_[i] = validateText(columns_[i]) + ' ' + String(columns[columns_[i]]).toUpperCase();\r\n\t\t}\r\n\t\tvar query = 'CREATE TABLE IF NOT EXISTS '+validateText(tableName)+' ('+columns_.join(', ')+')';\r\n\r\n\t\tscope.SQLQuery(query, [], successCallback, errorCallback);\r\n\t}\r\n\r\n\t//Select separated by comma\r\n\tscope.select = function(tableName, select, where, successCallback, errorCallback){\r\n\t\tvar select_ = select;\r\n\t\t\r\n\t\tif(select !== '*'){\r\n\t\t\tif(select.constructor === String)\r\n\t\t\t\tselect_ = [select];\r\n\r\n\t\t\tfor(var i = 0; i < select_.length; i++){\r\n\t\t\t\tselect_[i] = validateText(select_[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse select_ = false;\r\n\t\t\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar query = \"SELECT \" + (select_?select_.join(', '):select) + \" FROM \" + validateText(tableName) + wheres[0];\r\n\r\n\t\tscope.SQLQuery(query, wheres[1], function(data){\r\n\t\t\tif(data.length !== 0 && preprocessData(tableName, 'get', data[0])){\r\n\t\t\t\tfor (var i = 1; i < data.length; i++) {\r\n\t\t\t\t\tpreprocessData(tableName, 'get', data[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsuccessCallback(data);\r\n\t\t}, errorCallback);\r\n\t}\r\n\r\n\tscope.has = function(tableName, where, successCallback, errorCallback){\r\n\t\twhere.LIMIT = 1;\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar query = \"SELECT 1 FROM \" + validateText(tableName) + wheres[0];\r\n\r\n\t\tscope.SQLQuery(query, wheres[1], function(data){\r\n\t\t\tif(data.length !== 0)\r\n\t\t\t\treturn successCallback(true);\r\n\t\t\tsuccessCallback(false);\r\n\t\t}, errorCallback);\r\n\t}\r\n\r\n\tscope.get = function(tableName, select, where, successCallback, errorCallback){\r\n\t\twhere.LIMIT = 1;\r\n\t\tscope.select(tableName, select, where, function(rows){\r\n\t\t\tif(rows.length === 0)\r\n\t\t\t\tsuccessCallback(null);\r\n\t\t\telse if(select.constructor === Array)\r\n\t\t\t\tsuccessCallback(rows[0]);\r\n\t\t\telse successCallback(rows[0][select]);\r\n\t\t}, errorCallback);\r\n\t}\r\n\r\n\tscope.delete = function(tableName, where, successCallback, errorCallback){\r\n\t\tif(where){\r\n\t\t\tvar wheres = scope.makeWhere(where);\r\n\t\t\tvar query = \"DELETE FROM \" + validateText(tableName) + wheres[0];\r\n\t\t\tscope.SQLQuery(query, wheres[1], successCallback, errorCallback);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar query = \"TRUNCATE TABLE \" + validateText(tableName);\r\n\t\t\tscope.SQLQuery(query, [], successCallback, function(msg){\r\n\t\t\t\tif(msg.indexOf('syntax error') !== -1) // WebSQL may not support truncate function\r\n\t\t\t\t\tscope.delete(tableName, [], successCallback, errorCallback);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tscope.insert = function(tableName, object, successCallback, errorCallback){\r\n\t\tvar objectName = [];\r\n\t\tvar objectName_ = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(validateText(columns[i]));\r\n\t\t\tobjectName_.push('?');\r\n\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"INSERT INTO \" + validateText(tableName) + \" (\" + objectName.join(', ') + \") VALUES (\" + objectName_.join(', ') + \")\";\r\n\t\t\r\n\t\tscope.SQLQuery(query, objectData, successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.update = function(tableName, object, where, successCallback, errorCallback){\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar objectName = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(validateText(columns[i])+' = ?');\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"UPDATE \" + validateText(tableName) + \" SET \" + objectName.join(', ') + wheres[0];\r\n\t\tscope.SQLQuery(query, objectData.concat(wheres[1]), successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.drop = function(tableName, successCallback, errorCallback){\r\n\t\tscope.SQLQuery(\"DROP TABLE \"+validateText(tableName), [], successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.closeDatabase = function(){\r\n\t\tif(scope.polyfill) return;\r\n\t\tscope.db.close(function(){\r\n\t\t\t// Success\r\n\t\t}, function(error){\r\n\t\t\tvar msg = \"Error closing Database:\" + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n}","}\r\n\r\n// isNode\r\nif(typeof process !== 'undefined' && process.execPath)\r\n\tmodule.exports = SFDatabase;"]}