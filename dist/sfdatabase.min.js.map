{"version":3,"sources":["_head.js","IDB.js","WebSQL.js","SQL.js","_foot.js"],"names":["SFDatabase","databaseName","options","onConnected","scope","this","db","pending","initialized","databaseStructure","console","warn","structure","debug","initFinish","setTimeout","resumePending","pendingTimer","clearTimeout","length","i","splice","destroyObject","obj","Array","objKeys","Object","keys","preprocessTable","preprocessData","tableName","mode","object","found","isNode","process","execPath","onStructureInitialize","checkStructure","callback","table","queued","reduceQueue","error","createTable","websql","iDBError","ev","target","message","IDBStructure","e","IDBOpenDBRequest","WebSQLStructure","initError","onVersionChange","result","IDBWhere","data","rules","ORCondition","currentCondition","rules_","matches","match","check","toLowerCase","rule","operationCondition","undefined","indexOf","likeCode","regexed","rule_","a","temp","slice","replace","regexEscape","push","exist","RegExp","join","dbStructure","IDBLimit","query","processed","startFrom","limit","findIndexRange","where","index","objectStore","range","constructor","String","key","split","rangeBuilder","openCursor","prepareQuery","action","errorCallback","getObjectStore","LIMIT","ORDER","order","request","opt","val","IDBKeyRange","upperBound","lowerBound","bound","only","columns","successCallback","objectStoreNames","contains","text","columns_","createObjectStore","keyPath","autoIncrement","col","createIndex","unique","insert","duplicated","objectStoreRequest","add","onerror","onsuccess","has","cursor","value","continue","onScanning","WRITE","direction","UNIQUE","req","get","select","operation","code","delete","store","clear","update","drop","deleteObjectStore","closeDatabase","close","IDBQueryBuilder","window","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","webkitIDBKeyRange","msIDBKeyRange","storage","reopen","open","idbVersion","onupgradeneeded","onversionchange","transaction","validateText","makeWhere","comparator","children","wheres","objectData","defaultConditional","specialList","isNaN","msg","type","concat","Number","Boolean","name","likes","test","haveRelation","childs","stack","toUpperCase","where_","SQLQuery","select_","rows","objectName","objectName_","object_","JSON","parse","stringify","polyfill","SQLQueryBuilder","values","tx","executeSql","res","readOnly","rowsAffected","initializeTable","disablePlugin","sqlitePlugin","openDatabase","location","error_","module","exports"],"mappings":"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","file":"SFDatabase.min.js","sourcesContent":["/*\r\n\tScarletsFiction Database Library\r\n\tA simple database library for browser and nodejs\r\n\thttps://github.com/ScarletsFiction/SFDatabase-js\r\n\t\r\n\tMake sure you include this header on this script\r\n*/\r\n\r\n'use strict';\r\nfunction SFDatabase(databaseName, options, onConnected){\r\n\tvar scope = this;\r\n\tscope.db = null;\r\n\tscope.pending = [];\r\n\tscope.initialized = false;\r\n\tif(options.databaseStructure)\r\n\t\tconsole.warn('`options.databaseStructure` is deprecated, please use `options.structure` instead.');\r\n\r\n\tif(!options.structure)\r\n\t\toptions.structure = options.databaseStructure;\r\n\r\n\tif(!options)\r\n\t\toptions = {debug:false};\r\n\r\n\tvar initFinish = function(){\r\n\t\tif(scope.initialized) return;\r\n\t\tscope.initialized = true;\r\n\r\n\t\tif(onConnected){\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(!onConnected(resumePending))\r\n\t\t\t\t\tresumePending();\r\n\t\t\t}, 1);\r\n\t\t}\r\n\t\telse resumePending();\r\n\t}\r\n\r\n\tvar pendingTimer = -1;\r\n\tvar resumePending = function(){\r\n\t\tif(!scope.db){\r\n\t\t\tclearTimeout(pendingTimer);\r\n\t\t\tpendingTimer = setTimeout(resumePending, 1000);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!scope.pending.length) return;\r\n\t\tfor (var i = 0; i < scope.pending.length; i++) {\r\n\t\t\tscope.pending[i]();\r\n\t\t}\r\n\t\tscope.pending.splice(0);\r\n\t}\r\n\r\n\tvar destroyObject = function(obj){\r\n\t\tif(!obj || typeof obj !== 'object') return;\r\n\t\tif(obj instanceof Array)\r\n\t\t\tobj.splice(0);\r\n\t\telse {\r\n\t\t\tvar objKeys = Object.keys(obj);\r\n\t\t\tfor (var i = 0; i < objKeys.length; i++) {\r\n\t\t\t\tdelete obj[objKeys[i]];\r\n\t\t\t}\r\n\t\t}\r\n\t\tobj = null;\r\n\t}\r\n\r\n\tscope.preprocessTable = {}; // {tableName:{columnName:{set:function, get:function}}}}\r\n\tvar preprocessData = function(tableName, mode, object){\r\n\t\tvar found = false;\r\n\t\tif(!scope.preprocessTable[tableName]) return found;\r\n\r\n\t\tvar keys = Object.keys(scope.preprocessTable[tableName]);\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tif(!object[keys[i]] || !scope.preprocessTable[tableName][keys[i]][mode])\r\n\t\t\t\tcontinue;\r\n\t\t\tobject[keys[i]] = scope.preprocessTable[tableName][keys[i]][mode](object[keys[i]]);\r\n\t\t\tfound = true;\r\n\t\t}\r\n\t\treturn found;\r\n\t}\r\n\r\n\tvar isNode = typeof process !== 'undefined' && process.execPath;\r\n\tif(!isNode){\r\n\t\tvar onStructureInitialize = null;\r\n\t\tvar checkStructure = function(callback){\r\n\t\t\tvar table = Object.keys(options.structure);\r\n\r\n\t\t\tvar queued = table.length;\r\n\t\t\tvar reduceQueue = function(){\r\n\t\t\t\tqueued--;\r\n\t\t\t\tif(queued === 0){\r\n\t\t\t\t\tif(!callback) initFinish(scope);\r\n\t\t\t\t\telse callback();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(queued > 1)\r\n\t\t\t\t\tconsole.error(\"Failed to initialize\", queued, \"database structure\");\r\n\t\t\t}, 5000);\r\n\r\n\t\t\tfor (var i = 0; i < table.length; i++) {\r\n\t\t\t\tscope.createTable(table[i], options.structure[table[i]], reduceQueue);\r\n\t\t\t}\r\n\r\n\t\t\tif(onStructureInitialize){\r\n\t\t\t\tonStructureInitialize();\r\n\t\t\t\tonStructureInitialize = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// Load all query builder from here","if(!isNode && !options.websql){\r\n\tvar iDBError = function(ev){\r\n\t\tconsole.error((ev.target && ev.target.error.message) || ev);\r\n\t}\r\n\r\n\tIDBStructure(function(e){\r\n\t\tif(typeof IDBOpenDBRequest !== 'function'){\r\n\t\t\t// Fallback to WebSQL\r\n\t\t\tconsole.warn(\"Fallback to WebSQL\", e);\r\n\t\t\treturn WebSQLStructure();\r\n\t\t}\r\n\r\n\t\tiDBError(e);\r\n\t});\r\n}\r\n\r\nfunction IDBStructure(initError){\r\n\tIDBQueryBuilder();\r\n\r\n\tif(!window.indexedDB)\r\n  \t\twindow.indexedDB = window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n\tif(!window.IDBTransaction)\r\n\t\twindow.IDBTransaction = window.webkitIDBTransaction || window.msIDBTransaction;\r\n\tif(!window.IDBKeyRange)\r\n\t\twindow.IDBKeyRange = window.webkitIDBKeyRange || window.msIDBKeyRange;\r\n\r\n\tif(!window.indexedDB || !window.IDBTransaction || !window.IDBKeyRange){\r\n\t\tif(initError) initError('IndexedDB was not found');\r\n\t\treturn;\r\n\t}\r\n\r\n\tscope.storage = 'indexeddb';\r\n\tscope.reopen = function(){\r\n\t\tonStructureInitialize = function(){\r\n\t\t\tif(!options.websql){ // IndexedDB\r\n\t\t\t\tvar db = scope.db.objectStoreNames;\r\n\t\t\t\tfor (var i = 0; i < db.length; i++) {\r\n\t\t\t\t\tif(options.structure[db[i]] === void 0)\r\n\t\t\t\t\t\tscope.drop(db[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tonStructureInitialize = null;\r\n\t\t};\r\n\r\n\t\tscope.db = window.indexedDB.open(databaseName, options.idbVersion || 1);\r\n\t\tscope.db.onupgradeneeded = scope.db.onversionchange = onVersionChange;\r\n\t\tscope.db.onerror = iDBError;\r\n\t\tscope.db.onsuccess = function(ev){\r\n\t\t\tif(scope.db.result){\r\n\t\t\t\tscope.db = scope.db.result;\r\n\t\t\t\tscope.db.onerror = iDBError;\r\n\t\t\t}\r\n\r\n\t\t\tinitFinish(scope);\r\n\t\t};\r\n\t}\r\n\r\n\tscope.reopen();\r\n\tfunction onVersionChange(ev){\r\n\t\tif(scope.db.result)\r\n\t\t\tscope.db = scope.db.result;\r\n\r\n\t\tcheckStructure(function(){});\r\n\t}\r\n\r\n\t//action = readwrite, readonly\r\n\tscope.getObjectStore = function(tableName, action, errorCallback){\r\n\t\ttry{\r\n  \t\t\tvar transaction = scope.db.transaction(tableName, action);\r\n\t\t}catch(e){\r\n\t\t\tif(errorCallback) errorCallback(e)\r\n\t\t\treturn;\r\n\t\t}\r\n  \t\ttransaction.onerror = errorCallback || iDBError;\r\n  \t\treturn transaction.objectStore(tableName);\r\n\t}\r\n}","if(!isNode && options.websql === undefined) options.websql = true;\r\nif(options.websql){\r\n\tWebSQLStructure(function(){\r\n\t\t// Fallback to IndexedDB\r\n\t\tconsole.warn(\"Fallback to IndexedDB\");\r\n\t\tIDBStructure();\r\n\t});\r\n}\r\n\r\nfunction WebSQLStructure(initError){\r\n\tSQLQueryBuilder();\r\n\r\n\tscope.SQLQuery = function(query, values, successCallback, errorCallback){\r\n\t\tif(options.debug) options.debug(query, values);\r\n\r\n\t\tscope.db.transaction(function(tx){\r\n\t\t\ttx.executeSql(query, values, function(tx, res){\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(successCallback){\r\n\t\t\t\t\tvar readOnly = res && res.rows ? res.rows : res; // SQLResultSetRowList is immutable\r\n\t\t\t\t\tif(res && res.rowsAffected && !readOnly.length){\r\n\t\t\t\t\t\tsuccessCallback(res.rowsAffected);\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(readOnly.length){\r\n\t\t\t\t\t\tvar result = {length:readOnly.length};\r\n\t\t\t\t\t\tfor (var i = 0; i < readOnly.length; i++) {\r\n\t\t\t\t\t\t\tresult[i] = readOnly[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\tsuccessCallback(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse successCallback([]);\r\n\t            }\r\n\t\t\t}, function(tx, error){\r\n\t\t\t\tvar msg = 'Database Error: ' + error.message;\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\t\telse console.error(msg);\r\n\t\t\t});\r\n\t\t}, function(error){\r\n\t\t\tvar msg = 'Database Transaction Error: ' + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction initializeTable(disablePlugin){\r\n\t\tif(!disablePlugin && window.sqlitePlugin){\r\n\t\t\tscope.db = window.sqlitePlugin.openDatabase({name: databaseName, location: 'default'}, checkStructure, function(){\r\n\t\t\t\tconsole.error_(\"Failed to initialize sqlitePlugin\");\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tinitializeTable(true);\r\n\t\t\t\t}, 500);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if(window.openDatabase){\r\n\t\t\tscope.db = window.openDatabase(databaseName, \"1.0\", databaseName, 1024);\r\n\t\t\tif(scope.db) setTimeout(checkStructure, 500);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.error('WebSQL is not supported on this browser');\r\n\t\t\tif(initError) initError();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeTable();\r\n}","function SQLQueryBuilder(){\r\n\t// structure must have `scope.SQLQuery`\r\n\r\n\tfunction validateText(text){\r\n\t\tvar matches = text.match(/[a-zA-Z0-9_\\.]+/i);\r\n\t\treturn '`'+matches[0]+'`';\r\n\t}\r\n\r\n\t//{('AND', 'OR'), 'ORDER':{columnName:'ASC', 'DESC'}, 'LIMIT':[startIndex, rowsLimit]}\r\n\r\n\t// ex: [\"AND\"=>[\"id\"=>12, \"OR\"=>[\"name#1\"=>\"myself\", \"name\"=>\"himself\"]], \"LIMIT\"=>1]\r\n\t\t// Select one where (id == 12 && (name == \"myself\" || name == \"himself\"))\r\n\tscope.makeWhere = function(object, comparator, children){\r\n\t\tif(!object) return ['', []];\r\n\t\tvar wheres = [];\r\n\r\n\t\tvar objectData = [];\r\n\t\tvar columns = Object.keys(object);\r\n\t\tvar defaultConditional = ' AND ';\r\n\t\tvar specialList = ['order', 'limit'];\r\n\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tvar value = object[columns[i]];\r\n\r\n\t\t\tvar matches = columns[i].match(/([a-zA-Z0-9_\\.]+)(\\[(\\>\\=?|\\<\\=?|\\!|\\<\\>|\\>\\<|\\!?~)\\])?/);\r\n\t\t\tvar check = matches[1].toLowerCase();\r\n\t\t\tif(check==='and' || check==='or') continue;\r\n\t\t\tif(!children && specialList.indexOf(check)!==-1) continue;\r\n\r\n\t\t\tif(matches[3]){\r\n\t\t\t\tif((['>', '>=', '<', '<=']).indexOf(matches[3])!==-1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!isNaN(value))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twheres.push(matches[1] + ' ' + matches[3] + ' ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvar msg = 'SQL where: value of ' + matches[1] + ' is non-numeric and can\\'t be accepted';\r\n\t\t\t\t\t\tconsole.error(msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(matches[3] === '!')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar type = value === null || value === undefined ? false : value.constructor;\r\n\t\t\t\t\tif(!type)\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IS NOT NULL');\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(type === Array){\r\n\t\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' NOT IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse if(type === Number || type === Boolean || type === String){\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' != ?');\r\n\t\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type.name + ' can\\'t be accepted');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (matches[3] === '~' || matches[3] === '!~')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(value.constructor !== Array){\r\n\t\t\t\t\t\tvalue = [value];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar likes = [];\r\n\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\tlikes.push(matches[1] + (matches[3] === '!~' ? ' NOT' : '') + ' LIKE ?');\r\n\t\t\t\t\t\tif(value.indexOf('%') === -1) value[a] = '%'+value[a]+'%';\r\n\t\t\t\t\t\tobjectData.push(value[a]);\r\n\t\t\t\t\t}\r\n\r\n                    wheres.push('('+likes.join(' OR ')+')');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar type = value === null || value === undefined ? false : value.constructor;\r\n\t\t\t\tif(!type)\r\n\t\t\t\t\twheres.push(matches[1] + ' IS NULL');\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(type === Array){\r\n\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(type === Number || type === Boolean || type === String){\r\n\t\t\t\t\t\twheres.push(matches[1] + ' = ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type.name + ' can\\'t be accepted');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < columns.length; i++) {\r\n\t\t\tif(columns[i]==='ORDER'||columns[i]==='LIMIT')\r\n                continue;\r\n\r\n\t\t\tvar test = columns[i].split('AND');\r\n\t\t\tvar haveRelation = false;\r\n\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\tdefaultConditional = ' AND ';\r\n\t\t\t\thaveRelation = true;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttest = columns[i].split('OR');\r\n\t\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\t\tdefaultConditional = ' OR ';\r\n\t\t\t\t\thaveRelation = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(haveRelation){\r\n\t\t\t\tvar childs = scope.makeWhere(object[columns[i]], defaultConditional, true);\r\n\t\t\t\twheres.push('('+childs[0]+')');\r\n\t\t\t\tobjectData = objectData.concat(childs[1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar options = '';\r\n\t\tif(object['ORDER']){\r\n\t\t\tvar columns = Object.keys(object['ORDER']);\r\n\t\t\tvar stack = [];\r\n\t\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\t\tvar order = object['ORDER'][columns[i]].toUpperCase();\r\n\t\t\t\tif(order !== 'ASC' && order !== 'DESC') continue;\r\n\t\t\t\tstack.push(validateText(columns[i]) + ' ' + order);\r\n\t\t\t}\r\n\t\t\toptions = options + ' ORDER BY ' + stack.join(', ');\r\n\t\t}\r\n\t\tif(object['LIMIT']){\r\n\t\t\tif(!isNaN(object['LIMIT'][0]) && !isNaN(object['LIMIT'][1])){\r\n\t\t\t\toptions = options + ' LIMIT ' + object['LIMIT'][1] + ' OFFSET ' + object['LIMIT'][0];\r\n\t\t\t}\r\n\t\t\telse if(!isNaN(object['LIMIT'])){\r\n\t\t\t\toptions = options + ' LIMIT '+ object['LIMIT'];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar where_ = '';\r\n\t\tif(wheres.length!==0){\r\n\t\t\tif(!children)\r\n\t\t\t\twhere_ = \" WHERE \";\r\n\t\t\twhere_ = where_ + wheres.join(comparator ? comparator : defaultConditional);\r\n\t\t}\r\n\r\n\t\treturn [where_ + options, objectData];\r\n\t}\r\n\r\n\tscope.createTable = function(tableName, columns, successCallback, errorCallback){\r\n\t\tvar columns_ = Object.keys(columns);\r\n\t\tfor(var i = 0; i < columns_.length; i++){\r\n\t\t\tif(columns_[i][0] === '$')\r\n\t\t\t\tcolumns_[i] = columns_[i].slice(1);\r\n\r\n\t\t\tif(columns[columns_[i]].constructor === Array)\r\n\t\t\t\tcolumns_[i] = validateText(columns_[i]) + ' ' + columns[columns_[i]].join(' ').toUpperCase();\r\n\t\t\telse\r\n\t\t\t\tcolumns_[i] = validateText(columns_[i]) + ' ' + String(columns[columns_[i]]).toUpperCase();\r\n\t\t}\r\n\t\tvar query = 'CREATE TABLE IF NOT EXISTS '+validateText(tableName)+' ('+columns_.join(', ')+')';\r\n\r\n\t\tscope.SQLQuery(query, [], successCallback, errorCallback);\r\n\t}\r\n\r\n\t//Select separated by comma\r\n\tscope.select = function(tableName, select, where, successCallback, errorCallback){\r\n\t\tvar select_ = select;\r\n\t\t\r\n\t\tif(select !== '*'){\r\n\t\t\tif(select.constructor === String)\r\n\t\t\t\tselect_ = [select];\r\n\r\n\t\t\tfor(var i = 0; i < select_.length; i++){\r\n\t\t\t\tselect_[i] = validateText(select_[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse select_ = false;\r\n\t\t\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar query = \"SELECT \" + (select_?select_.join(', '):select) + \" FROM \" + validateText(tableName) + wheres[0];\r\n\r\n\t\tscope.SQLQuery(query, wheres[1], function(data){\r\n\t\t\tif(data.length !== 0 && preprocessData(tableName, 'get', data[0])){\r\n\t\t\t\tfor (var i = 1; i < data.length; i++) {\r\n\t\t\t\t\tpreprocessData(tableName, 'get', data[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsuccessCallback(data);\r\n\t\t}, errorCallback);\r\n\t}\r\n\r\n\tscope.has = function(tableName, where, successCallback, errorCallback){\r\n\t\twhere.LIMIT = 1;\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar query = \"SELECT 1 FROM \" + validateText(tableName) + wheres[0];\r\n\r\n\t\tscope.SQLQuery(query, wheres[1], function(data){\r\n\t\t\tif(data.length !== 0)\r\n\t\t\t\treturn successCallback(true);\r\n\t\t\tsuccessCallback(false);\r\n\t\t}, errorCallback);\r\n\t}\r\n\r\n\tscope.get = function(tableName, select, where, successCallback, errorCallback){\r\n\t\twhere.LIMIT = 1;\r\n\t\tscope.select(tableName, select, where, function(rows){\r\n\t\t\tif(rows.length === 0)\r\n\t\t\t\tsuccessCallback(null);\r\n\t\t\telse if(select.constructor === Array)\r\n\t\t\t\tsuccessCallback(rows[0]);\r\n\t\t\telse successCallback(rows[0][select]);\r\n\t\t}, errorCallback);\r\n\t}\r\n\r\n\tscope.delete = function(tableName, where, successCallback, errorCallback){\r\n\t\tif(where){\r\n\t\t\tvar wheres = scope.makeWhere(where);\r\n\t\t\tvar query = \"DELETE FROM \" + validateText(tableName) + wheres[0];\r\n\t\t\tscope.SQLQuery(query, wheres[1], successCallback, errorCallback);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar query = \"TRUNCATE TABLE \" + validateText(tableName);\r\n\t\t\tscope.SQLQuery(query, [], successCallback, function(msg){\r\n\t\t\t\tif(msg.indexOf('syntax error') !== -1) // WebSQL may not support truncate function\r\n\t\t\t\t\tscope.delete(tableName, [], successCallback, errorCallback);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tscope.insert = function(tableName, object, successCallback, errorCallback){\r\n\t\tvar objectName = [];\r\n\t\tvar objectName_ = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(validateText(columns[i]));\r\n\t\t\tobjectName_.push('?');\r\n\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"INSERT INTO \" + validateText(tableName) + \" (\" + objectName.join(', ') + \") VALUES (\" + objectName_.join(', ') + \")\";\r\n\t\t\r\n\t\tscope.SQLQuery(query, objectData, successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.update = function(tableName, object, where, successCallback, errorCallback){\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar objectName = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(validateText(columns[i])+' = ?');\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"UPDATE \" + validateText(tableName) + \" SET \" + objectName.join(', ') + wheres[0];\r\n\t\tscope.SQLQuery(query, objectData.concat(wheres[1]), successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.drop = function(tableName, successCallback, errorCallback){\r\n\t\tscope.SQLQuery(\"DROP TABLE \"+validateText(tableName), [], successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.closeDatabase = function(){\r\n\t\tif(scope.polyfill) return;\r\n\t\tscope.db.close(function(){\r\n\t\t\t// Success\r\n\t\t}, function(error){\r\n\t\t\tvar msg = \"Error closing Database:\" + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n}","}\r\n\r\n// isNode\r\nif(typeof process !== 'undefined' && process.execPath)\r\n\tmodule.exports = SFDatabase;"]}