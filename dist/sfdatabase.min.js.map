{"version":3,"sources":["_head.js","SQL.js","IDB.js","WebSQL.js","MySQL.js"],"names":["SFDatabase","databaseName","options","onConnected","scope","this","db","pending","initialized","debug","initFinish","resumePending","pendingTimer","clearTimeout","setTimeout","length","i","splice","destroyObject","obj","Array","objKeys","Object","keys","preprocessTable","preprocessData","tableName","mode","object","found","validateText","text","match","isNode","process","execPath","SQLQueryBuilder","makeWhere","comparator","children","wheres","objectData","columns","defaultConditional","specialList","value","matches","check","toLowerCase","indexOf","isNaN","push","msg","console","error","type","constructor","name","temp","a","join","concat","likes","test","split","haveRelation","childs","stack","order","toUpperCase","where_","createTable","successCallback","errorCallback","columns_","String","query","SQLQuery","select","where","select_","data","delete","insert","objectName","objectName_","object_","JSON","parse","stringify","update","drop","closeDatabase","polyfill","close","message","IDBStructure","initError","IDBWhere","IDBDataOrder","rules","ORCondition","currentCondition","rules_","operationCondition","operation","likeCode","regexed","slice","replace","regexEscape","RegExp","ref","checkOnly","column","sort","sorterByKey","LIMIT","ORDER","createTableRetry","objectStore","createObjectStore","keyPath","autoIncrement","col","createIndex","unique","e","duplicated","objectStoreRequest","getObjectStore","add","onerror","onsuccess","ev","target","result","openCursor","ordered","filteredData","orderedData","event","cursor","continue","processed","put","onStructureInitialize","deleteObjectStore","initializeTable","action","transaction","WebSQLStructure","databaseTest","values","tx","executeSql","res","readOnly","rows","rowsAffected","websql","window","sqlitePlugin","openDatabase","location","undefined","mysql","require","createPool","host","user","password","database","on","hideInitialization","log","getConnection","err1","connection","release","err","sqlMessage","sql","code","MySQLStructure"],"mappings":";;;;;;;;AAQA,aAGA,SAAAA,WAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAC,KACAD,EAAAE,GAAA,KACAF,EAAAG,QAAA,GACAH,EAAAI,aAAA,EACAN,IACAA,EAAA,CAAAO,OAAA,IAEA,IAAAC,EAAA,WACAN,EAAAI,cACAJ,EAAAI,aAAA,IAEAL,GAAAA,EAAAQ,IACAA,MAGAC,GAAA,EACAD,EAAA,SAAAA,IACA,IAAAP,EAAAE,GAGA,OAFAO,aAAAD,QACAA,EAAAE,WAAAH,EAAA,MAGA,GAAAP,EAAAG,QAAAQ,OAAA,CACA,IAAA,IAAAC,EAAA,EAAAA,EAAAZ,EAAAG,QAAAQ,OAAAC,IACAZ,EAAAG,QAAAS,KAEAZ,EAAAG,QAAAU,OAAA,KAGAC,EAAA,SAAAC,GACA,GAAAA,GAAA,iBAAAA,EAAA,CACA,GAAAA,aAAAC,MACAD,EAAAF,OAAA,QAGA,IADA,IAAAI,EAAAC,OAAAC,KAAAJ,GACAH,EAAA,EAAAA,EAAAK,EAAAN,OAAAC,WACAG,EAAAE,EAAAL,IAGAG,EAAA,OAGAf,EAAAoB,gBAAA,GACA,IAAAC,EAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,GAAA,EACA,IAAAzB,EAAAoB,gBAAAE,GAAA,OAAAG,EAGA,IADA,IAAAN,EAAAD,OAAAC,KAAAnB,EAAAoB,gBAAAE,IACAV,EAAA,EAAAA,EAAAO,EAAAR,OAAAC,IACAY,EAAAL,EAAAP,KAAAZ,EAAAoB,gBAAAE,GAAAH,EAAAP,IAAAW,KAEAC,EAAAL,EAAAP,IAAAZ,EAAAoB,gBAAAE,GAAAH,EAAAP,IAAAW,GAAAC,EAAAL,EAAAP,KACAa,GAAA,GAEA,OAAAA,GAIAzB,EAAA0B,aAAA,SAAAC,GAEA,MAAA,IADAA,EAAAC,MAAA,oBACA,GAAA,KAGA,IAAAC,EAAA,oBAAAC,SAAAA,QAAAC,SC3EA,SAAAC,IAOAhC,EAAAiC,UAAA,SAAAT,EAAAU,EAAAC,GACA,IAAAX,EAAA,MAAA,CAAA,GAAA,IAQA,IAPA,IAAAY,EAAA,GAEAC,EAAA,GACAC,EAAApB,OAAAC,KAAAK,GACAe,EAAA,QACAC,EAAA,CAAA,QAAA,SAEA5B,EAAA,EAAAA,EAAA0B,EAAA3B,OAAAC,IAAA,CACA,IAAA6B,EAAAjB,EAAAc,EAAA1B,IAEA8B,EAAAJ,EAAA1B,GAAAgB,MAAA,2DACAe,EAAAD,EAAA,GAAAE,cACA,GAAA,QAAAD,GAAA,OAAAA,EACA,GAAAR,IAAA,IAAAK,EAAAK,QAAAF,GAEA,GAAAD,EAAA,IACA,IAAA,IAAA,CAAA,IAAA,KAAA,IAAA,MAAAG,QAAAH,EAAA,IACA,CACA,IAAAI,MAAAL,GACA,CACAL,EAAAW,KAAAL,EAAA,GAAA,IAAAA,EAAA,GAAA,MACAL,EAAAU,KAAAN,GACA,SAGA,IAAAO,EAAA,uBAAAN,EAAA,GAAA,wCACAO,QAAAC,MAAAF,QAGA,GAAA,MAAAN,EAAA,GACA,CACA,IAAAS,EACA,GADAA,EAAAV,MAAAA,GAAAA,EAAAW,YAAAC,KAIA,GAAA,UAAAF,EAAA,CAEA,IADA,IAAAG,EAAA,GACAC,EAAA,EAAAA,EAAAd,EAAA9B,OAAA4C,IACAD,EAAAP,KAAA,KAEAX,EAAAW,KAAAL,EAAA,GAAA,YAAAY,EAAAE,KAAA,MAAA,KACAnB,EAAAA,EAAAoB,OAAAhB,OAGA,WAAAU,GAAA,YAAAA,GAAA,WAAAA,GACAf,EAAAW,KAAAL,EAAA,GAAA,SACAL,EAAAU,KAAAN,IAIAQ,QAAAC,MAAA,oBAAAR,EAAA,GAAA,cAAAS,EAAA,2BAjBAf,EAAAW,KAAAL,EAAA,GAAA,qBAoBA,GAAA,MAAAA,EAAA,IAAA,OAAAA,EAAA,GACA,CACAD,EAAAW,cAAApC,QACAyB,EAAA,CAAAA,IAGA,IAAAiB,EAAA,GACA,IAAAH,EAAA,EAAAA,EAAAd,EAAA9B,OAAA4C,IACAG,EAAAX,KAAAL,EAAA,IAAA,OAAAA,EAAA,GAAA,OAAA,IAAA,YACA,IAAAD,EAAAI,QAAA,OAAAJ,EAAAc,GAAA,IAAAd,EAAAc,GAAA,KACAlB,EAAAU,KAAAN,EAAAc,IAGAnB,EAAAW,KAAA,IAAAW,EAAAF,KAAA,QAAA,WAIA,GADAL,EAAAV,MAAAA,GAAAA,EAAAW,YAAAC,KAIA,GAAA,UAAAF,EAAA,CAEA,IADAG,EAAA,GACAC,EAAA,EAAAA,EAAAd,EAAA9B,OAAA4C,IACAD,EAAAP,KAAA,KAEAX,EAAAW,KAAAL,EAAA,GAAA,QAAAY,EAAAE,KAAA,MAAA,KACAnB,EAAAA,EAAAoB,OAAAhB,OAGA,WAAAU,GAAA,YAAAA,GAAA,WAAAA,GACAf,EAAAW,KAAAL,EAAA,GAAA,QACAL,EAAAU,KAAAN,IAIAQ,QAAAC,MAAA,oBAAAR,EAAA,GAAA,cAAAS,EAAA,2BAjBAf,EAAAW,KAAAL,EAAA,GAAA,YAsBA,IAAA9B,EAAA,EAAAA,EAAA0B,EAAA3B,OAAAC,IACA,GAAA,UAAA0B,EAAA1B,IAAA,UAAA0B,EAAA1B,GAAA,CAGA,IAAA+C,EAAArB,EAAA1B,GAAAgD,MAAA,OACAC,GAAA,EAYA,GAXA,IAAAF,EAAAhD,QAAA,KAAAgD,EAAA,IACApB,EAAA,QACAsB,GAAA,GAIA,KADAF,EAAArB,EAAA1B,GAAAgD,MAAA,OACAjD,QAAA,KAAAgD,EAAA,KACApB,EAAA,OACAsB,GAAA,GAGAA,EAAA,CACA,IAAAC,EAAA9D,EAAAiC,UAAAT,EAAAc,EAAA1B,IAAA2B,GAAA,GACAH,EAAAW,KAAA,IAAAe,EAAA,GAAA,KACAzB,EAAAA,EAAAoB,OAAAK,EAAA,KAIA,IAAAhE,EAAA,GACA,GAAA0B,EAAA,MAAA,CACAc,EAAApB,OAAAC,KAAAK,EAAA,OAAA,IACAuC,EAAA,GACA,IAAAnD,EAAA,EAAAA,EAAA0B,EAAA3B,OAAAC,IAAA,CACA,IAAAoD,EAAAxC,EAAA,MAAAc,EAAA1B,IAAAqD,cACA,QAAAD,GAAA,SAAAA,GACAD,EAAAhB,KAAA/C,EAAA0B,aAAAY,EAAA1B,IAAA,IAAAoD,GAEAlE,EAAAA,EAAA,aAAAiE,EAAAP,KAAA,MAEAhC,EAAA,QACAsB,MAAAtB,EAAA,MAAA,KAAAsB,MAAAtB,EAAA,MAAA,IAGAsB,MAAAtB,EAAA,SACA1B,EAAAA,EAAA,UAAA0B,EAAA,OAHA1B,EAAAA,EAAA,UAAA0B,EAAA,MAAA,GAAA,WAAAA,EAAA,MAAA,IAOA,IAAA0C,EAAA,GAOA,OANA,IAAA9B,EAAAzB,SACAwB,IACA+B,EAAA,WACAA,GAAA9B,EAAAoB,KAAAtB,GAAAK,IAGA,CAAA2B,EAAApE,EAAAuC,IAGArC,EAAAmE,YAAA,SAAA7C,EAAAgB,EAAA8B,EAAAC,GAGA,IADA,IAAAC,EAAApD,OAAAC,KAAAmB,GACA1B,EAAA,EAAAA,EAAA0D,EAAA3D,OAAAC,IACA,UAAA0B,EAAAgC,EAAA1D,IAAAwC,YAAAC,KACAiB,EAAA1D,GAAAZ,EAAA0B,aAAA4C,EAAA1D,IAAA,IAAA0B,EAAAgC,EAAA1D,IAAA,GAAAqD,cAAA,IAAAjE,EAAA0B,aAAAY,EAAAgC,EAAA1D,IAAA,IAEA0D,EAAA1D,GAAAZ,EAAA0B,aAAA4C,EAAA1D,IAAA,IAAA2D,OAAAjC,EAAAgC,EAAA1D,KAAAqD,cAEA,IAAAO,EAAA,8BAAAxE,EAAA0B,aAAAJ,GAAA,KAAAgD,EAAAd,KAAA,MAAA,IAEAxD,EAAAyE,SAAAD,EAAA,GAAAJ,EAAAC,IAIArE,EAAA0E,OAAA,SAAApD,EAAAoD,EAAAC,EAAAP,EAAAC,GACA,IAAAO,EAAAF,EACA,GAAA,MAAAA,EACA,IAAA,IAAA9D,EAAA,EAAAA,EAAAgE,EAAAjE,OAAAC,IACAgE,EAAAhE,GAAAZ,EAAA0B,aAAAkD,EAAAhE,SAEAgE,GAAA,EAEA,IAAAxC,EAAApC,EAAAiC,UAAA0C,GACAH,EAAA,WAAAI,EAAAA,EAAApB,KAAA,MAAAkB,GAAA,SAAA1E,EAAA0B,aAAAJ,GAAAc,EAAA,GAEApC,EAAAyE,SAAAD,EAAApC,EAAA,GAAA,SAAAyC,GACA,GAAAT,EAAA,CACA,GAAA,IAAAS,EAAAlE,QAAAU,EAAAC,EAAA,MAAAuD,EAAA,IACA,IAAA,IAAAjE,EAAA,EAAAA,EAAAiE,EAAAlE,OAAAC,IACAS,EAAAC,EAAA,MAAAuD,EAAAjE,IAGAwD,EAAAS,KACAR,IAGArE,EAAA8E,OAAA,SAAAxD,EAAAqD,EAAAP,EAAAC,GACA,GAAAM,EAAA,CACA,IAAAvC,EAAApC,EAAAiC,UAAA0C,GACAH,EAAA,eAAAxE,EAAA0B,aAAAJ,GAAAc,EAAA,GACApC,EAAAyE,SAAAD,EAAApC,EAAA,GAAAgC,EAAAC,OAEA,CACAG,EAAA,kBAAAxE,EAAA0B,aAAAJ,GACAtB,EAAAyE,SAAAD,EAAA,GAAAJ,EAAA,SAAApB,IACA,IAAAA,EAAAH,QAAA,iBACA7C,EAAA8E,OAAAxD,EAAA,GAAA8C,EAAAC,OAKArE,EAAA+E,OAAA,SAAAzD,EAAAE,EAAA4C,EAAAC,GACA,IAAAW,EAAA,GACAC,EAAA,GACA5C,EAAA,GACA6C,EAAAC,KAAAC,MAAAD,KAAAE,UAAA7D,IACAc,EAAApB,OAAAC,KAAA+D,GACA7D,EAAAC,EAAA,MAAA4D,GACA,IAAA,IAAAtE,EAAA,EAAAA,EAAA0B,EAAA3B,OAAAC,IACAoE,EAAAjC,KAAA/C,EAAA0B,aAAAY,EAAA1B,KACAqE,EAAAlC,KAAA,KAEAV,EAAAU,KAAAmC,EAAA5C,EAAA1B,KAEA,IAAA4D,EAAA,eAAAxE,EAAA0B,aAAAJ,GAAA,KAAA0D,EAAAxB,KAAA,MAAA,aAAAyB,EAAAzB,KAAA,MAAA,IAEAxD,EAAAyE,SAAAD,EAAAnC,EAAA+B,EAAAC,IAGArE,EAAAsF,OAAA,SAAAhE,EAAAE,EAAAmD,EAAAP,EAAAC,GACA,IAAAjC,EAAApC,EAAAiC,UAAA0C,GACAK,EAAA,GACA3C,EAAA,GACA6C,EAAAC,KAAAC,MAAAD,KAAAE,UAAA7D,IACAc,EAAApB,OAAAC,KAAA+D,GACA7D,EAAAC,EAAA,MAAA4D,GACA,IAAA,IAAAtE,EAAA,EAAAA,EAAA0B,EAAA3B,OAAAC,IACAoE,EAAAjC,KAAA/C,EAAA0B,aAAAY,EAAA1B,IAAA,QACAyB,EAAAU,KAAAmC,EAAA5C,EAAA1B,KAEA,IAAA4D,EAAA,UAAAxE,EAAA0B,aAAAJ,GAAA,QAAA0D,EAAAxB,KAAA,MAAApB,EAAA,GACApC,EAAAyE,SAAAD,EAAAnC,EAAAoB,OAAArB,EAAA,IAAAgC,EAAAC,IAGArE,EAAAuF,KAAA,SAAAjE,EAAA8C,EAAAC,GACArE,EAAAyE,SAAA,cAAAzE,EAAA0B,aAAAJ,GAAA,GAAA8C,EAAAC,IAGArE,EAAAwF,cAAA,WACAxF,EAAAyF,UACAzF,EAAAE,GAAAwF,MAAA,aAEA,SAAAxC,GACA,IAAAF,EAAA,0BAAAE,EAAAyC,QACAtB,cAAAA,cAAArB,GACAC,QAAAC,MAAAF,MCrPA,SAAA4C,EAAAC,GAPA,IAGAC,EA0HAC,EA1HAD,EAAA,SAAAA,EAAAjB,EAAAmB,EAAAC,GAGA,IAFA,IAAAC,GAAAD,EACAE,EAAAjF,OAAAC,KAAA6E,GACApF,EAAA,EAAAA,EAAAuF,EAAAxF,OAAAC,IAAA,CACA,IAAA8B,EAAAJ,QAAA1B,GAAAgB,MAAA,2DACAe,EAAAD,EAAA,GAAAE,cACA,GAAA,QAAAD,GAAA,OAAAA,IACAR,WAAA,IAAAK,YAAAK,QAAAF,IAAA,CAEA,IAAAyD,GAAA,EACA,GAAA,MAAA1D,EAAA,GACAmC,EAAAnC,EAAA,KAAAsD,EAAAG,EAAAvF,MACAwF,GAAA,QAGA,GAAA,OAAA1D,EAAA,GACAmC,EAAAnC,EAAA,IAAAsD,EAAAG,EAAAvF,MACAwF,GAAA,QAGA,GAAA,MAAA1D,EAAA,GACAmC,EAAAnC,EAAA,KAAAsD,EAAAG,EAAAvF,MACAwF,GAAA,QAGA,GAAA,OAAA1D,EAAA,GACAmC,EAAAnC,EAAA,IAAAsD,EAAAG,EAAAvF,MACAwF,GAAA,QAGA,GAAA,OAAA1D,EAAA,IACAmC,EAAAnC,EAAA,KAAAsD,EAAAG,EAAAvF,IAAA,IAAAiE,EAAAnC,EAAA,KAAAsD,EAAAG,EAAAvF,IAAA,MACAwF,GAAA,QAGA,GAAA,SAAA1D,EAAA,IACAmC,EAAAnC,EAAA,IAAAsD,EAAAG,EAAAvF,IAAA,IAAAiE,EAAAnC,EAAA,IAAAsD,EAAAG,EAAAvF,IAAA,MACAwF,GAAA,QAGA,GAAA,OAAA1D,EAAA,IACAmC,EAAAnC,EAAA,KAAAsD,EAAAG,EAAAvF,IAAA,IAAAiE,EAAAnC,EAAA,KAAAsD,EAAAG,EAAAvF,IAAA,MACAwF,GAAA,QAGA,GAAA,QAAA1D,EAAA,IACAmC,EAAAnC,EAAA,IAAAsD,EAAAG,EAAAvF,IAAA,IAAAiE,EAAAnC,EAAA,IAAAsD,EAAAG,EAAAvF,IAAA,MACAwF,GAAA,QAIA,GAAA,QAAA1D,EAAA,GACA0D,EAAAN,EAAAjB,EAAAmB,EAAAG,EAAAvF,KAAA,QAIA,GAAA,OAAA8B,EAAA,GACA0D,EAAAN,EAAAjB,EAAAmB,EAAAG,EAAAvF,KAAA,QAGA,GAAA,IAAAyF,UAAA1F,OACAkE,EAAAnC,EAAA,KAAAsD,EAAAG,EAAAvF,MACAwF,GAAA,QAGA,GAAA,MAAA1D,EAAA,GACAmC,EAAAnC,EAAA,KAAAsD,EAAAG,EAAAvF,MACAwF,GAAA,QAGA,IAAA,IAAA1D,EAAA,GAAAG,QAAA,KAAA,CACA,IAAAyD,EAAA,EACAC,EAAAP,EAAAG,EAAAvF,IACA,MAAAoF,EAAAG,EAAAvF,IAAA4F,MAAA,EAAA,IAAA,MAAAR,EAAAG,EAAAvF,IAAA4F,OAAA,IACAF,EAAA,EACAC,EAAAA,EAAAC,MAAA,GAAA,IAGA,MAAAR,EAAAG,EAAAvF,IAAA4F,MAAA,EAAA,IACAF,EAAA,EACAC,EAAAA,EAAAC,MAAA,IAGA,MAAAR,EAAAG,EAAAvF,IAAA4F,OAAA,KACAF,EAAA,EACAC,EAAAA,EAAAC,MAAA,GAAA,IAGAD,EAAAA,EAAAE,QAAAC,YAAA,QAEA,IAAAJ,EACAC,EAAA,IAAAA,EAEA,IAAAD,IACAC,GAAA,KACAA,EAAAI,OAAAJ,EAAA,MAGA,GAAA7D,EAAA,GAAAG,QAAA,KACAgC,EAAAnC,EAAA,IAAAd,MAAA2E,KACAH,GAAA,GAIAvB,EAAAnC,EAAA,IAAAd,MAAA2E,KACAH,GAAA,GAIA,GAAAH,EACAC,EAAAA,GAAAE,OAGA,IAAAA,EAAA,CACAF,GAAA,EACA,QAGA,OAAAA,GAIAH,EAAA,SAAAa,EAAAT,EAAAU,GACA,GAAAA,EACA,SAAAV,EAAA,QAAAA,EAAA,OAMA,IADA,IAAAH,EAAA9E,OAAAC,KAAAgF,GACAvF,EAAA,EAAAA,EAAAoF,EAAArF,OAAAC,IACA,GAAA,SAAAoF,EAAApF,GACA,CAAA,IAAAkG,EAAA5F,OAAAC,KAAAgF,EAAA,OACA,IAAAvF,EAAA,EAAAA,EAAAkG,EAAAnG,OAAAC,IACAgG,EAAA/B,KAAAkC,KAAAC,YAAAF,EAAAlG,GAAA,QAAAuF,EAAA,MAAAW,EAAAlG,UAGA,SAAAoF,EAAApF,KACA,iBAAAuF,EAAA,MACAS,EAAA/B,KAAA+B,EAAA/B,KAAAhE,OAAA,EAAAsF,EAAA,OAEAS,EAAA/B,KAAA+B,EAAA/B,KAAAhE,OAAAsF,EAAA,MAAA,GAAAA,EAAA,MAAA,KAMA,UAFAA,EAAAc,aACAd,EAAAe,MACA,GAAAhG,OAAAC,KAAAgF,GAAAxF,OACA,IAAAC,EAAAgG,EAAA/B,KAAAlE,OAAA,EAAAC,GAAA,EAAAA,IACAkF,EAAAc,EAAA/B,KAAAjE,GAAAuF,IACAS,EAAA/B,KAAAhE,OAAAD,EAAA,IAWAZ,EAAAmH,kBAAA,EACAnH,EAAAmE,YAAA,SAAA7C,EAAAgB,EAAA8B,EAAAC,GAEA,IAAAC,EAAApD,OAAAC,KAAAmB,GACA,IAEA,IADA,IAAA8E,EAAApH,EAAAE,GAAAmH,kBAAA/F,EAAA,CAAAgG,QAAA,QAAAC,eAAA,IACA3G,EAAA,EAAAA,EAAA0D,EAAA3D,OAAAC,IAAA,CACA,IAAA4G,EAAA9F,aAAA4C,EAAA1D,IACA,SAAA0B,EAAAgC,EAAA1D,IAAAwC,YAAAC,MAAAf,EAAAgC,EAAA1D,IAAAD,QAAA,EACAyG,EAAAK,YAAAD,EAAAA,EAAA,CAAAE,OAAA,UAAApF,EAAAgC,EAAA1D,IAAA,KAGAwG,EAAAK,YAAAD,EAAAA,EAAA,CAAAE,QAAA,IAEAtD,GACAA,EAAApE,GACA,MAAA2H,GACAtD,GACAA,EAAAsD,KAIA3H,EAAA+E,OAAA,SAAAzD,EAAAE,EAAA4C,EAAAC,GACA,IAAAuD,GAAA,EAKAC,EAJA7H,EAAA8H,eAAAxG,EAAA,YAAA,YACAsG,GAAAvD,GACAA,EAAA,qBAEA0D,IAAAvG,GAEA6C,IACAwD,EAAAG,QAAA,WACAJ,GAAA,EACAvD,EAAA,iCAEAD,IACAyD,EAAAI,UAAA,SAAAC,GACA9D,EAAA8D,EAAAC,OAAAC,WAIApI,EAAA0E,OAAA,SAAApD,EAAAoD,EAAAC,EAAAP,EAAAC,GACA,IACAgE,EADArI,EAAA8H,eAAAxG,EAAA,WAAA+C,GACAgE,aACAC,EAAAvC,EAAA,KAAApB,GAAA,GACA4D,EAAA,GACAC,EAAA,CAAA3D,KAAA,IACAwB,EAAA,SAAA5D,GAEA,IADA,IAAAa,EAAA,GACA1C,EAAA,EAAAA,EAAA8D,EAAA/D,OAAAC,IACA0C,EAAAoB,EAAA9D,IAAA6B,EAAAiC,EAAA9D,IAEA2H,EAAAxF,KAAAO,IAEA+E,EAAAL,QAAA3D,EAEAgE,EAAAJ,UAAA,SAAAQ,GACA,IAAAC,EAAAD,EAAAN,OAAAC,OACA,GAAAM,EAAA,CACA,IAAAjG,EAAAiG,EAAAjG,MACA6F,EACAE,EAAA3D,KAAA9B,KAAAN,GAEAqD,EAAArD,EAAAkC,IACA0B,EAAA5D,GAEAiG,EAAAC,eACA,CACA,GAAAL,EAAA,CACAvC,EAAAyC,EAAA7D,GAAA,GACA,IAAA,IAAA/D,EAAA,EAAAA,EAAA4H,EAAA3D,KAAAlE,OAAAC,IACAyF,EAAAmC,EAAA3D,KAAAjE,IAGAwD,EAAAmE,MAKAvI,EAAA8E,OAAA,SAAAxD,EAAAqD,EAAAP,EAAAC,GACA,IAAA+C,EAAApH,EAAA8H,eAAAxG,EAAA,YAAA+C,GACAgE,EAAAjB,EAAAiB,aACAO,EAAA,EACAN,EAAAvC,EAAA,KAAApB,GAAA,GACA6D,EAAA,CAAA3D,KAAA,IACAwD,EAAAL,QAAA3D,EAEAgE,EAAAJ,UAAA,SAAAQ,GACA,IAAAC,EAAAD,EAAAN,OAAAC,OACA,GAAAM,EAAA,CACA,IAAAjG,EAAAiG,EAAAjG,MACA6F,EACAE,EAAA3D,KAAA9B,KAAAN,GAEAqD,EAAArD,EAAAkC,KACAiE,IACAF,EAAA5D,UAEA4D,EAAAC,gBAGA,GAAAL,EAAA,CACAvC,EAAAyC,EAAA7D,GAAA,GACA,IAAA,IAAA/D,EAAA,EAAAA,EAAA4H,EAAA3D,KAAAlE,OAAAC,IACAwG,EAAAtC,OAAA0D,EAAA3D,KAAAjE,GAAAwG,EAAAE,UAEAlD,GACAA,EAAAoE,EAAA3D,KAAAlE,aAEAyD,GAAAA,EAAAwE,KAKA5I,EAAAsF,OAAA,SAAAhE,EAAAE,EAAAmD,EAAAP,EAAAC,GACA,IAAA/B,EAAApB,OAAAC,KAAAK,GACA4F,EAAApH,EAAA8H,eAAAxG,EAAA,YAAA+C,GACAgE,EAAAjB,EAAAiB,aACAO,EAAA,EACAN,EAAAvC,EAAA,KAAApB,GAAA,GACA6D,EAAA,CAAA3D,KAAA,IACAwD,EAAAL,QAAA3D,EACA,IAAAgC,EAAA,SAAA5D,GACA,IAAA,IAAA7B,EAAA,EAAAA,EAAA0B,EAAA3B,OAAAC,IACA6B,EAAAH,EAAA1B,IAAAY,EAAAc,EAAA1B,IAEAgI,KAGAP,EAAAJ,UAAA,SAAAQ,GACA,IAAAC,EAAAD,EAAAN,OAAAC,OACA,GAAAM,EAAA,CACA,IAAAjG,EAAAiG,EAAAjG,MACA6F,EACAE,EAAA3D,KAAA9B,KAAAN,GAEAqD,EAAArD,EAAAkC,KACA0B,EAAA5D,GACAiG,EAAApD,OAAA7C,IAEAiG,EAAAC,eAEA,CACA,GAAAL,EAAA,CACAvC,EAAAyC,EAAA7D,GAAA,GACA,IAAA,IAAA/D,EAAA,EAAAA,EAAA4H,EAAA3D,KAAAlE,OAAAC,IACAyF,EAAAmC,EAAA3D,KAAAjE,IACAwG,EAAAyB,IAAAL,EAAA3D,KAAAjE,IAIAwD,GACAA,EAAAwE,MAKA5I,EAAAuF,KAAA,SAAAjE,EAAA8C,EAAAC,GACArE,EAAAwF,gBACAsD,sBAAA,WACA,IACA9I,EAAAE,GAAA6I,kBAAAzH,GACA,MAAAqG,MAEA3H,EAAAgJ,gBAAA5E,EAAAC,IAGArE,EAAAwF,cAAA,WACAxF,EAAAE,GAAAwF,SAjUA1F,EAAA8H,eAAA,SAAAxG,EAAA2H,EAAA5E,GACA,IAAA6E,EAAAlJ,EAAAE,GAAAgJ,YAAA5H,EAAA2H,GAEA,OADAC,EAAAlB,QAAA3D,EACA6E,EAAA9B,YAAA9F,ICNA,SAAA6H,EAAAtD,GACA7D,IAEA,IAAAoH,EAAA,SAAA/E,GACArE,EAAAI,aAAA,EACAJ,EAAAyE,SAAA,WAAA,GAAA,SAAAI,GACA7E,EAAAI,aAAA,EACAyE,EAAAlE,QAAAL,EAAAN,IACA,WACAA,EAAAI,aAAA,EACAiE,OAIArE,EAAAyE,SAAA,SAAAD,EAAA6E,EAAAjF,EAAAC,GACA,IAAArE,EAAAI,YAMA,OALAJ,EAAAG,QAAA4C,KAAA,WACA/C,EAAAyE,SAAAD,EAAA6E,EAAAjF,EAAAC,KAEA5D,aAAAD,QACAA,EAAAE,WAAAH,EAAA,MAIAT,EAAAO,OAAAP,EAAAO,MAAAmE,EAAA6E,GAEArJ,EAAAE,GAAAgJ,YAAA,SAAAI,GACAA,EAAAC,WAAA/E,EAAA6E,EAAA,SAAAC,EAAAE,GAIA,GAHA1I,EAAAuI,GACAA,EAAA7E,EAAA,KAEAJ,EAAA,CACA,IAAAqF,EAAAD,GAAAA,EAAAE,KAAAF,EAAAE,KAAAF,EACA,GAAAA,GAAAA,EAAAG,eAAAF,EAAA9I,OAGA,OAFAyD,EAAAoF,EAAAG,mBACAF,EAAA,MAGA,GAAAA,EAAA9I,OAAA,CAEA,IADA,IAAAyH,EAAA,CAAAzH,OAAA8I,EAAA9I,QACAC,EAAA,EAAAA,EAAA6I,EAAA9I,OAAAC,IACAwH,EAAAxH,GAAA6I,EAAA7I,GAEA6I,EAAA,KACArF,EAAAgE,QAEAhE,EAAA,MAEA,SAAAkF,EAAApG,GACA,IAAAF,EAAA,mBAAAE,EAAAyC,QACA7E,EAAAuI,GACAA,EAAA7E,EAAA,KAEAH,EAAAA,EAAArB,GACAC,QAAAC,MAAAF,MAEA,SAAAE,GACA,IAAAF,EAAA,+BAAAE,EAAAyC,QACAtB,EAAAA,EAAArB,GACAC,QAAAC,MAAAF,MAKAlD,EAAA8J,OACAC,OAAAC,cACA9J,EAAAE,GAAA2J,OAAAC,aAAAC,aAAA,CAAA1G,KAAAxD,EAAAmK,SAAA,YAGAZ,EAAA,SAAAlG,GACAD,QAAAC,MAAA,qCACA2G,OAAAC,cAAA,EACAjE,GAAAA,OAGAgE,OAAAE,cACA/J,EAAAE,GAAA2J,OAAAE,aAAAlK,EAAA,MAAAA,EAAA,MACAuJ,EAAA,SAAAlG,GACAD,QAAAC,MAAA,+BACA2G,OAAAE,cAAA,EACAjK,EAAA8J,QAAA,EACA/D,GAAAA,OAGAA,GAAAA,KAGA5C,QAAAC,MAAA,2CACA2C,GAAAA,KDhGAhE,GAAA/B,EAAA8J,QACAhE,EAAA,WAEAuD,MEHAtH,QAAAoI,IAAAnK,EAAAoK,QAAApK,EAAAoK,OAAA,GACApK,EAAAoK,OAIA,SAAArE,GACA7D,IAEA,IAAAkI,EAAAC,QAAA,SACAnK,EAAAE,GAAAgK,EAAAE,WAAA,CACAC,KAAAvK,EAAAuK,KAAAvK,EAAAuK,KAAA,YACAC,KAAAxK,EAAAwK,KAAAxK,EAAAwK,KAAA,OACAC,SAAAzK,EAAAyK,SAAAzK,EAAAyK,SAAA,GACAC,SAAA3K,IAGAE,GAAAC,EAAAE,GAAAuK,GAAA,aAAAnK,GACAR,EAAA4K,oBACAzH,QAAA0H,IAAA,iBAAA9K,EAAA,aAEAG,EAAAyE,SAAA,SAAAD,EAAA6E,EAAAjF,EAAAC,GACA,IAAArE,EAAAI,YAMA,OALAJ,EAAAG,QAAA4C,KAAA,WACA/C,EAAAyE,SAAAD,EAAA6E,EAAAjF,EAAAC,KAEA5D,aAAAD,QACAA,EAAAE,WAAAH,EAAA,MAIAT,EAAAO,OAAAP,EAAAO,MAAAmE,EAAA6E,GAEArJ,EAAAE,GAAA0K,cAAA,SAAAC,EAAAC,GACA,GAAAD,EAIA,OAHAC,EAAAC,eACA1G,EAAAA,EAAAwG,GACA5H,QAAAC,MAAA2H,IAIAC,EAAAtG,MAAAA,EAAA6E,EAAA,SAAA2B,EAAAtB,GACAoB,EAAAC,UACAjK,EAAAuI,GACAA,EAAA,KACA7E,EAAA,MAEAwG,GAAA5G,EAAA1D,WAAA,WACA0D,EAAAsF,IACA,GACAsB,GAAAtK,WAAA,WACA,IAAAwC,EAAA,CAAAF,IAAAgI,EAAAC,WAAAzG,MAAAwG,EAAAE,IAAAC,KAAAH,EAAAG,MACA9G,EAAAA,EAAAnB,GACAD,QAAAC,MAAAA,IACA,QAnDAkI,GDFAvJ,QAAAoI,IAAAnK,EAAA8J,SAAA9J,EAAA8J,QAAA,GACA9J,EAAA8J,QACAT,EAAA,WAEAvD","file":"sfdatabase.min.js","sourcesContent":["/*\r\n\tScarletsFiction Database Library\r\n\tA simple database library for browser and nodejs\r\n\thttps://github.com/ScarletsFiction/SFDatabase-js\r\n\t\r\n\tMake sure you include this header on this script\r\n*/\r\n\r\n'use strict';\r\n\r\n// Ext-AlaSQL.js are required for browser only if the browser didn't support WebSQL\r\nfunction SFDatabase(databaseName, options, onConnected){\r\n\tvar scope = this;\r\n\tscope.db = null;\r\n\tscope.pending = [];\r\n\tscope.initialized = false;\r\n\tif(!options)\r\n\t\toptions = {debug:false};\r\n\r\n\tvar initFinish = function(){\r\n\t\tif(scope.initialized) return;\r\n\t\tscope.initialized = true;\r\n\r\n\t\tvar async = onConnected ? onConnected(resumePending) : false;\r\n\t\tif(!async) resumePending();\r\n\t}\r\n\r\n\tvar pendingTimer = -1;\r\n\tvar resumePending = function(){\r\n\t\tif(!scope.db){\r\n\t\t\tclearTimeout(pendingTimer);\r\n\t\t\tpendingTimer = setTimeout(resumePending, 1000);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!scope.pending.length) return;\r\n\t\tfor (var i = 0; i < scope.pending.length; i++) {\r\n\t\t\tscope.pending[i]();\r\n\t\t}\r\n\t\tscope.pending.splice(0);\r\n\t}\r\n\r\n\tvar destroyObject = function(obj){\r\n\t\tif(!obj || typeof obj !== 'object') return;\r\n\t\tif(obj instanceof Array)\r\n\t\t\tobj.splice(0);\r\n\t\telse {\r\n\t\t\tvar objKeys = Object.keys(obj);\r\n\t\t\tfor (var i = 0; i < objKeys.length; i++) {\r\n\t\t\t\tdelete obj[objKeys[i]];\r\n\t\t\t}\r\n\t\t}\r\n\t\tobj = null;\r\n\t}\r\n\r\n\tscope.preprocessTable = {}; // {tableName:{columnName:{set:function, get:function}}}}\r\n\tvar preprocessData = function(tableName, mode, object){\r\n\t\tvar found = false;\r\n\t\tif(!scope.preprocessTable[tableName]) return found;\r\n\r\n\t\tvar keys = Object.keys(scope.preprocessTable[tableName]);\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tif(!object[keys[i]] || !scope.preprocessTable[tableName][keys[i]][mode])\r\n\t\t\t\tcontinue;\r\n\t\t\tobject[keys[i]] = scope.preprocessTable[tableName][keys[i]][mode](object[keys[i]]);\r\n\t\t\tfound = true;\r\n\t\t}\r\n\t\treturn found;\r\n\t}\r\n\r\n\t// The code below could be similar with PHP version\r\n\tscope.validateText = function(text){\r\n\t\tvar matches = text.match(/[a-zA-Z0-9_\\.]+/i);\r\n\t\treturn '`'+matches[0]+'`';\r\n\t}\r\n\r\n\tvar isNode = typeof process !== 'undefined' && process.execPath;\r\n\t// Load all query builder from here","function SQLQueryBuilder(){\r\n\t// structure must have `scope.SQLQuery`\r\n\r\n\t//{('AND', 'OR'), 'ORDER':{columnName:'ASC', 'DESC'}, 'LIMIT':[startIndex, rowsLimit]}\r\n\r\n\t// ex: [\"AND\"=>[\"id\"=>12, \"OR\"=>[\"name#1\"=>\"myself\", \"name\"=>\"himself\"]], \"LIMIT\"=>1]\r\n\t\t// Select one where (id == 12 && (name == \"myself\" || name == \"himself\"))\r\n\tscope.makeWhere = function(object, comparator, children){\r\n\t\tif(!object) return ['', []];\r\n\t\tvar wheres = [];\r\n\r\n\t\tvar objectData = [];\r\n\t\tvar columns = Object.keys(object);\r\n\t\tvar defaultConditional = ' AND ';\r\n\t\tvar specialList = ['order', 'limit'];\r\n\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tvar value = object[columns[i]];\r\n\r\n\t\t\tvar matches = columns[i].match(/([a-zA-Z0-9_\\.]+)(\\[(\\>\\=?|\\<\\=?|\\!|\\<\\>|\\>\\<|\\!?~)\\])?/);\r\n\t\t\tvar check = matches[1].toLowerCase();\r\n\t\t\tif(check==='and' || check==='or') continue;\r\n\t\t\tif(!children && specialList.indexOf(check)!==-1) continue;\r\n\r\n\t\t\tif(matches[3]){\r\n\t\t\t\tif((['>', '>=', '<', '<=']).indexOf(matches[3])!==-1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!isNaN(value))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twheres.push(matches[1] + ' ' + matches[3] + ' ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvar msg = 'SQL where: value of ' + matches[1] + ' is non-numeric and can\\'t be accepted';\r\n\t\t\t\t\t\tconsole.error(msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(matches[3] === '!')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar type = value===null || value===undefined ? false : value.constructor.name;\r\n\t\t\t\t\tif(!type)\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IS NOT NULL');\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(type==='Array'){\r\n\t\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' NOT IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse if(type==='Number' || type==='Boolean' || type==='String'){\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' != ?');\r\n\t\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type + ' can\\'t be accepted');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (matches[3] === '~' || matches[3] === '!~')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(value.constructor !== Array){\r\n\t\t\t\t\t\tvalue = [value];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar likes = [];\r\n\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\tlikes.push(matches[1] + (matches[3] === '!~' ? ' NOT' : '') + ' LIKE ?');\r\n\t\t\t\t\t\tif(value.indexOf('%') === -1) value[a] = '%'+value[a]+'%';\r\n\t\t\t\t\t\tobjectData.push(value[a]);\r\n\t\t\t\t\t}\r\n\r\n                    wheres.push('('+likes.join(' OR ')+')');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar type = value===null || value===undefined ? false : value.constructor.name;\r\n\t\t\t\tif(!type)\r\n\t\t\t\t\twheres.push(matches[1] + ' IS NULL');\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(type==='Array'){\r\n\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(type==='Number' || type==='Boolean' || type==='String'){\r\n\t\t\t\t\t\twheres.push(matches[1] + ' = ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type + ' can\\'t be accepted');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < columns.length; i++) {\r\n\t\t\tif(columns[i]==='ORDER'||columns[i]==='LIMIT')\r\n                continue;\r\n\r\n\t\t\tvar test = columns[i].split('AND');\r\n\t\t\tvar haveRelation = false;\r\n\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\tdefaultConditional = ' AND ';\r\n\t\t\t\thaveRelation = true;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttest = columns[i].split('OR');\r\n\t\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\t\tdefaultConditional = ' OR ';\r\n\t\t\t\t\thaveRelation = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(haveRelation){\r\n\t\t\t\tvar childs = scope.makeWhere(object[columns[i]], defaultConditional, true);\r\n\t\t\t\twheres.push('('+childs[0]+')');\r\n\t\t\t\tobjectData = objectData.concat(childs[1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar options = '';\r\n\t\tif(object['ORDER']){\r\n\t\t\tvar columns = Object.keys(object['ORDER']);\r\n\t\t\tvar stack = [];\r\n\t\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\t\tvar order = object['ORDER'][columns[i]].toUpperCase();\r\n\t\t\t\tif(order !== 'ASC' && order !== 'DESC') continue;\r\n\t\t\t\tstack.push(scope.validateText(columns[i]) + ' ' + order);\r\n\t\t\t}\r\n\t\t\toptions = options + ' ORDER BY ' + stack.join(', ');\r\n\t\t}\r\n\t\tif(object['LIMIT']){\r\n\t\t\tif(!isNaN(object['LIMIT'][0]) && !isNaN(object['LIMIT'][1])){\r\n\t\t\t\toptions = options + ' LIMIT ' + object['LIMIT'][1] + ' OFFSET ' + object['LIMIT'][0];\r\n\t\t\t}\r\n\t\t\telse if(!isNaN(object['LIMIT'])){\r\n\t\t\t\toptions = options + ' LIMIT '+ object['LIMIT'];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar where_ = '';\r\n\t\tif(wheres.length!==0){\r\n\t\t\tif(!children)\r\n\t\t\t\twhere_ = \" WHERE \";\r\n\t\t\twhere_ = where_ + wheres.join(comparator ? comparator : defaultConditional);\r\n\t\t}\r\n\r\n\t\treturn [where_ + options, objectData];\r\n\t}\r\n\r\n\tscope.createTable = function(tableName, columns, successCallback, errorCallback)\r\n\t{\r\n\t\tvar columns_ = Object.keys(columns);\r\n\t\tfor(var i = 0; i < columns_.length; i++){\r\n\t\t\tif(columns[columns_[i]].constructor.name === 'Array')\r\n\t\t\t\tcolumns_[i] = scope.validateText(columns_[i])+' '+columns[columns_[i]][0].toUpperCase()+' '+scope.validateText(columns[columns_[i]][1]);\r\n\t\t\telse\r\n\t\t\t\tcolumns_[i] = scope.validateText(columns_[i])+' '+String(columns[columns_[i]]).toUpperCase();\r\n\t\t}\r\n\t\tvar query = 'CREATE TABLE IF NOT EXISTS '+scope.validateText(tableName)+' ('+columns_.join(', ')+')';\r\n\r\n\t\tscope.SQLQuery(query, [], successCallback, errorCallback);\r\n\t}\r\n\r\n\t//Select separated by comma\r\n\tscope.select = function(tableName, select, where, successCallback, errorCallback){\r\n\t\tvar select_ = select;\r\n\t\tif(select!=='*')\r\n\t\t\tfor(var i = 0; i < select_.length; i++){\r\n\t\t\t\tselect_[i] = scope.validateText(select_[i]);\r\n\t\t\t}\r\n\t\telse select_ = false;\r\n\t\t\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar query = \"SELECT \" + (select_?select_.join(', '):select) + \" FROM \" + scope.validateText(tableName) + wheres[0];\r\n\r\n\t\tscope.SQLQuery(query, wheres[1], function(data){\r\n\t\t\tif(!successCallback) return;\r\n\t\t\tif(data.length!==0 && preprocessData(tableName, 'get', data[0])){\r\n\t\t\t\tfor (var i = 1; i < data.length; i++) {\r\n\t\t\t\t\tpreprocessData(tableName, 'get', data[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsuccessCallback(data);\r\n\t\t}, errorCallback);\r\n\t}\r\n\r\n\tscope.delete = function(tableName, where, successCallback, errorCallback){\r\n\t\tif(where){\r\n\t\t\tvar wheres = scope.makeWhere(where);\r\n\t\t\tvar query = \"DELETE FROM \" + scope.validateText(tableName) + wheres[0];\r\n\t\t\tscope.SQLQuery(query, wheres[1], successCallback, errorCallback);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar query = \"TRUNCATE TABLE \" + scope.validateText(tableName);\r\n\t\t\tscope.SQLQuery(query, [], successCallback, function(msg){\r\n\t\t\t\tif(msg.indexOf('syntax error')!==-1) // WebSQL may not support truncate function\r\n\t\t\t\t\tscope.delete(tableName, [], successCallback, errorCallback);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tscope.insert = function(tableName, object, successCallback, errorCallback){\r\n\t\tvar objectName = [];\r\n\t\tvar objectName_ = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(scope.validateText(columns[i]));\r\n\t\t\tobjectName_.push('?');\r\n\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"INSERT INTO \" + scope.validateText(tableName) + \" (\" + objectName.join(', ') + \") VALUES (\" + objectName_.join(', ') + \")\";\r\n\t\t\r\n\t\tscope.SQLQuery(query, objectData, successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.update = function(tableName, object, where, successCallback, errorCallback){\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar objectName = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(scope.validateText(columns[i])+' = ?');\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"UPDATE \" + scope.validateText(tableName) + \" SET \" + objectName.join(', ') + wheres[0];\r\n\t\tscope.SQLQuery(query, objectData.concat(wheres[1]), successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.drop = function(tableName, successCallback, errorCallback){\r\n\t\tscope.SQLQuery(\"DROP TABLE \"+scope.validateText(tableName), [], successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.closeDatabase = function(){\r\n\t\tif(scope.polyfill) return;\r\n\t\tscope.db.close(function(){\r\n\t\t\t// Success\r\n\t\t}, function(error){\r\n\t\t\tvar msg = \"Error closing Database:\" + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n}","if(!isNode && !options.websql){\r\n\tIDBStructure(function(){\r\n\t\t// Fallback to IndexedDB\r\n\t\tWebSQLStructure();\r\n\t});\r\n}\r\n\r\nfunction IDBStructure(initError){\r\n\tIDBQueryBuilder();\r\n\r\n\t//action = readwrite, readonly\r\n\tscope.getObjectStore = function(tableName, action, errorCallback){\r\n  \t\tvar transaction = scope.db.transaction(tableName, action);\r\n  \t\ttransaction.onerror = errorCallback;\r\n  \t\treturn transaction.objectStore(tableName);\r\n\t}\r\n}","if(!isNode && options.websql === undefined) options.websql = true;\r\nif(options.websql){\r\n\tWebSQLStructure(function(){\r\n\t\t// Fallback to IndexedDB\r\n\t\tIDBStructure();\r\n\t});\r\n}\r\n\r\nfunction WebSQLStructure(initError){\r\n\tSQLQueryBuilder();\r\n\r\n\tvar databaseTest = function(errorCallback){\r\n\t\tscope.initialized = true;\r\n\t\tscope.SQLQuery('select 1', [], function(data){\r\n\t\t\tscope.initialized = false;\r\n\t\t\tif(data.length) initFinish(scope);\r\n\t\t}, function(){\r\n\t\t\tscope.initialized = false;\r\n\t\t\terrorCallback();\r\n\t\t});\r\n\t}\r\n\r\n\tscope.SQLQuery = function(query, values, successCallback, errorCallback){\r\n\t\tif(!scope.initialized){\r\n\t\t\tscope.pending.push(function(){\r\n\t\t\t\tscope.SQLQuery(query, values, successCallback, errorCallback)\r\n\t\t\t});\r\n\t\t\tclearTimeout(pendingTimer);\r\n\t\t\tpendingTimer = setTimeout(resumePending, 1000);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(options.debug) options.debug(query, values);\r\n\r\n\t\tscope.db.transaction(function(tx){\r\n\t\t\ttx.executeSql(query, values, function(tx, res){\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(successCallback){\r\n\t\t\t\t\tvar readOnly = res && res.rows ? res.rows : res; // SQLResultSetRowList is immutable\r\n\t\t\t\t\tif(res && res.rowsAffected && !readOnly.length){\r\n\t\t\t\t\t\tsuccessCallback(res.rowsAffected);\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(readOnly.length){\r\n\t\t\t\t\t\tvar result = {length:readOnly.length};\r\n\t\t\t\t\t\tfor (var i = 0; i < readOnly.length; i++) {\r\n\t\t\t\t\t\t\tresult[i] = readOnly[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\tsuccessCallback(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse successCallback([]);\r\n\t            }\r\n\t\t\t}, function(tx, error){\r\n\t\t\t\tvar msg = 'Database Error: ' + error.message;\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\t\telse console.error(msg);\r\n\t\t\t});\r\n\t\t}, function(error){\r\n\t\t\tvar msg = 'Database Transaction Error: ' + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction initializeTable(){\r\n\t\tif(options.websql){ // WebSQL\r\n\t\t\tif(window.sqlitePlugin){\r\n\t\t\t\tscope.db = window.sqlitePlugin.openDatabase({name: databaseName, location: 'default'});\r\n\r\n\t\t\t\t// Initialize sqlitePlugin\r\n\t\t\t\tdatabaseTest(function(error){\r\n\t\t\t\t\tconsole.error(\"Failed to initialize sqlitePlugin\");\r\n\t\t\t\t\twindow.sqlitePlugin = false;\r\n\t\t\t\t\tif(initError) initError();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if(window.openDatabase){\r\n\t\t\t\tscope.db = window.openDatabase(databaseName, \"1.0\", databaseName, 1024);\r\n\t\t\t\tdatabaseTest(function(error){\r\n\t\t\t\t\tconsole.error(\"Failed to initialize WebSQL\");\r\n\t\t\t\t\twindow.openDatabase = false;\r\n\t\t\t\t\toptions.websql = false;\r\n\t\t\t\t\tif(initError) initError();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if(initError) initError();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.error('WebSQL is not supported on this browser');\r\n\t\t\tif(initError) initError();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeTable();\r\n}","if(isNode && options.mysql === undefined) options.mysql = true;\r\nif(options.mysql){\r\n\tMySQLStructure();\r\n}\r\n\r\nfunction MySQLStructure(initError){\r\n\tSQLQueryBuilder();\r\n\r\n\tvar mysql = require('mysql');\r\n\tscope.db = mysql.createPool({\r\n\t\thost:options.host?options.host:'localhost',\r\n\t\tuser:options.user?options.user:'root',\r\n\t\tpassword:options.password?options.password:'',\r\n\t\tdatabase:databaseName\r\n\t});\r\n\r\n\tif(onConnected) scope.db.on('connection', initFinish);\r\n\tif(!options.hideInitialization)\r\n\t\tconsole.log(\"Connecting to \"+databaseName+\" database\");\r\n\r\n\tscope.SQLQuery = function(query, values, successCallback, errorCallback){\r\n\t\tif(!scope.initialized){\r\n\t\t\tscope.pending.push(function(){\r\n\t\t\t\tscope.SQLQuery(query, values, successCallback, errorCallback)\r\n\t\t\t});\r\n\t\t\tclearTimeout(pendingTimer);\r\n\t\t\tpendingTimer = setTimeout(resumePending, 1000);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(options.debug) options.debug(query, values);\r\n\r\n\t\tscope.db.getConnection(function(err1, connection){\r\n\t        if(err1){\r\n\t            connection.release();\r\n\t            if(errorCallback) errorCallback(err1);\r\n\t            else console.error(err1);\r\n\t            return;\r\n\t        }\r\n\r\n\t        connection.query(query, values, function(err, rows){\r\n\t            connection.release();\r\n\t            destroyObject(values);\r\n\t            values = null;\r\n\t            query = null;\r\n\r\n\t            if(!err&&successCallback) setTimeout(function(){\r\n\t            \tsuccessCallback(rows);\r\n\t            }, 0);\r\n\t            else if(err) setTimeout(function(){\r\n\t            \tvar error = {msg:err.sqlMessage, query:err.sql, code:err.code};\r\n\t\t            if(errorCallback) errorCallback(error);\r\n\t\t            else console.error(error);\r\n\t            }, 0);\r\n\t        });\r\n\t    });\r\n\t}\r\n}"]}