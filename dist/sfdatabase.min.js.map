{"version":3,"sources":["_head.js","IDB.js","WebSQL.js","SQL.js","_foot.js"],"names":["SFDatabase","databaseName","options","onConnected","scope","this","db","pending","initialized","databaseStructure","console","warn","structure","debug","initFinish","setTimeout","resumePending","pendingTimer","clearTimeout","length","i","splice","destroyObject","obj","Array","objKeys","Object","keys","preprocessTable","preprocessData","tableName","mode","object","found","isNode","process","execPath","onStructureInitialize","checkStructure","callback","table","queued","reduceQueue","error","createTable","websql","iDBError","ev","target","message","IDBStructure","e","IDBOpenDBRequest","WebSQLStructure","initError","onVersionChange","result","busy","apply","IDBWhere","data","rules","ORCondition","currentCondition","rules_","matches","match","check","toLowerCase","rule","operationCondition","undefined","indexOf","likeCode","regexed","rule_","a","temp","slice","replace","regexEscape","push","exist","RegExp","join","dbStructure","IDBLimit","query","processed","startFrom","limit","findIndexRange","where","index","objectStore","range","constructor","String","key","split","rangeBuilder","openCursor","prepareQuery","action","errorCallback","getObjectStore","LIMIT","ORDER","order","request","opt","val","IDBKeyRange","upperBound","lowerBound","bound","only","columns","successCallback","objectStoreNames","contains","text","columns_","createObjectStore","keyPath","autoIncrement","col","createIndex","unique","insert","arguments","duplicated","objectStoreRequest","add","onerror","onsuccess","has","cursor","value","continue","onScanning","onError","WRITE","direction","UNIQUE","req","get","select","operation","code","delete","store","clear","update","drop","deleteObjectStore","closeDatabase","close","IDBQueryBuilder","window","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","webkitIDBKeyRange","msIDBKeyRange","storage","reopen","open","idbVersion","onupgradeneeded","onversionchange","transaction","validateText","makeWhere","comparator","children","wheres","objectData","defaultConditional","specialList","isNaN","msg","type","concat","Number","Boolean","name","likes","test","haveRelation","childs","stack","toUpperCase","where_","SQLQuery","select_","rows","objectName","objectName_","object_","JSON","parse","stringify","polyfill","SQLQueryBuilder","values","tx","executeSql","res","readOnly","rowsAffected","initializeTable","disablePlugin","sqlitePlugin","openDatabase","location","error_","module","exports"],"mappings":"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","file":"SFDatabase.min.js","sourcesContent":["/*\r\n\tScarletsFiction Database Library\r\n\tA simple database library for browser and nodejs\r\n\thttps://github.com/ScarletsFiction/SFDatabase-js\r\n\t\r\n\tMake sure you include this header on this script\r\n*/\r\n\r\n'use strict';\r\nfunction SFDatabase(databaseName, options, onConnected){\r\n\tvar scope = this;\r\n\tscope.db = null;\r\n\tscope.pending = [];\r\n\tscope.initialized = false;\r\n\tif(options.databaseStructure)\r\n\t\tconsole.warn('`options.databaseStructure` is deprecated, please use `options.structure` instead.');\r\n\r\n\tif(!options.structure)\r\n\t\toptions.structure = options.databaseStructure;\r\n\r\n\tif(!options)\r\n\t\toptions = {debug:false};\r\n\r\n\tvar initFinish = function(){\r\n\t\tif(scope.initialized) return;\r\n\t\tscope.initialized = true;\r\n\r\n\t\tif(onConnected){\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(!onConnected(resumePending))\r\n\t\t\t\t\tresumePending();\r\n\t\t\t}, 1);\r\n\t\t}\r\n\t\telse resumePending();\r\n\t}\r\n\r\n\tvar pendingTimer = -1;\r\n\tvar resumePending = function(){\r\n\t\tif(!scope.db){\r\n\t\t\tclearTimeout(pendingTimer);\r\n\t\t\tpendingTimer = setTimeout(resumePending, 1000);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!scope.pending.length) return;\r\n\t\tfor (var i = 0; i < scope.pending.length; i++) {\r\n\t\t\tscope.pending[i]();\r\n\t\t}\r\n\t\tscope.pending.splice(0);\r\n\t}\r\n\r\n\tvar destroyObject = function(obj){\r\n\t\tif(!obj || typeof obj !== 'object') return;\r\n\t\tif(obj instanceof Array)\r\n\t\t\tobj.splice(0);\r\n\t\telse {\r\n\t\t\tvar objKeys = Object.keys(obj);\r\n\t\t\tfor (var i = 0; i < objKeys.length; i++) {\r\n\t\t\t\tdelete obj[objKeys[i]];\r\n\t\t\t}\r\n\t\t}\r\n\t\tobj = null;\r\n\t}\r\n\r\n\tscope.preprocessTable = {}; // {tableName:{columnName:{set:function, get:function}}}}\r\n\tvar preprocessData = function(tableName, mode, object){\r\n\t\tvar found = false;\r\n\t\tif(!scope.preprocessTable[tableName]) return found;\r\n\r\n\t\tvar keys = Object.keys(scope.preprocessTable[tableName]);\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tif(!object[keys[i]] || !scope.preprocessTable[tableName][keys[i]][mode])\r\n\t\t\t\tcontinue;\r\n\t\t\tobject[keys[i]] = scope.preprocessTable[tableName][keys[i]][mode](object[keys[i]]);\r\n\t\t\tfound = true;\r\n\t\t}\r\n\t\treturn found;\r\n\t}\r\n\r\n\tvar isNode = typeof process !== 'undefined' && process.execPath;\r\n\tif(!isNode){\r\n\t\tvar onStructureInitialize = null;\r\n\t\tvar checkStructure = function(callback){\r\n\t\t\tvar table = Object.keys(options.structure);\r\n\r\n\t\t\tvar queued = table.length;\r\n\t\t\tvar reduceQueue = function(){\r\n\t\t\t\tqueued--;\r\n\t\t\t\tif(queued === 0){\r\n\t\t\t\t\tif(!callback) initFinish(scope);\r\n\t\t\t\t\telse callback();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(queued > 1)\r\n\t\t\t\t\tconsole.error(\"Failed to initialize\", queued, \"database structure\");\r\n\t\t\t}, 5000);\r\n\r\n\t\t\tfor (var i = 0; i < table.length; i++) {\r\n\t\t\t\tscope.createTable(table[i], options.structure[table[i]], reduceQueue);\r\n\t\t\t}\r\n\r\n\t\t\tif(onStructureInitialize){\r\n\t\t\t\tonStructureInitialize();\r\n\t\t\t\tonStructureInitialize = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// Load all query builder from here","if(!isNode && !options.websql){\r\n\tvar iDBError = function(ev){\r\n\t\tconsole.error((ev.target && ev.target.error.message) || ev);\r\n\t}\r\n\r\n\tIDBStructure(function(e){\r\n\t\tif(typeof IDBOpenDBRequest !== 'function'){\r\n\t\t\t// Fallback to WebSQL\r\n\t\t\tconsole.warn(\"Fallback to WebSQL\", e);\r\n\t\t\treturn WebSQLStructure();\r\n\t\t}\r\n\r\n\t\tiDBError(e);\r\n\t});\r\n}\r\n\r\nfunction IDBStructure(initError){\r\n\tIDBQueryBuilder();\r\n\r\n\tif(!window.indexedDB)\r\n  \t\twindow.indexedDB = window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n\tif(!window.IDBTransaction)\r\n\t\twindow.IDBTransaction = window.webkitIDBTransaction || window.msIDBTransaction;\r\n\tif(!window.IDBKeyRange)\r\n\t\twindow.IDBKeyRange = window.webkitIDBKeyRange || window.msIDBKeyRange;\r\n\r\n\tif(!window.indexedDB || !window.IDBTransaction || !window.IDBKeyRange){\r\n\t\tif(initError) initError('IndexedDB was not found');\r\n\t\treturn;\r\n\t}\r\n\r\n\tscope.busy = false;\r\n\tscope.storage = 'indexeddb';\r\n\tscope.reopen = function(){\r\n\t\tonStructureInitialize = function(){\r\n\t\t\tif(!options.websql){ // IndexedDB\r\n\t\t\t\tvar db = scope.db.objectStoreNames;\r\n\t\t\t\tfor (var i = 0; i < db.length; i++) {\r\n\t\t\t\t\tif(options.structure[db[i]] === void 0)\r\n\t\t\t\t\t\tscope.drop(db[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tonStructureInitialize = null;\r\n\t\t};\r\n\r\n\t\tscope.db = window.indexedDB.open(databaseName, options.idbVersion || 1);\r\n\t\tscope.db.onupgradeneeded = scope.db.onversionchange = onVersionChange;\r\n\t\tscope.db.onsuccess = function(ev){\r\n\t\t\tif(scope.db.result){\r\n\t\t\t\tscope.db = scope.db.result;\r\n\t\t\t}\r\n\r\n\t\t\tinitFinish(scope);\r\n\t\t};\r\n\t}\r\n\r\n\tscope.reopen();\r\n\tfunction onVersionChange(ev){\r\n\t\tif(scope.db.result)\r\n\t\t\tscope.db = scope.db.result;\r\n\r\n\t\tscope.busy = [];\r\n\t\tcheckStructure(function(){\r\n\t\t\tif(!scope.busy)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tfor (var i = 0; i < scope.busy.length; i++) {\r\n\t\t\t\tscope.busy[i][0].apply(null, scope.busy[1]);\r\n\t\t\t}\r\n\r\n\t\t\tscope.busy = false;\r\n\t\t});\r\n\t}\r\n\r\n\t//action = readwrite, readonly\r\n\tscope.getObjectStore = function(tableName, action, errorCallback){\r\n\t\ttry{\r\n  \t\t\tvar transaction = scope.db.transaction(tableName, action);\r\n\t\t}catch(e){\r\n\t\t\tif(errorCallback) errorCallback(e)\r\n\t\t\treturn;\r\n\t\t}\r\n  \t\ttransaction.onerror = errorCallback || iDBError;\r\n  \t\treturn transaction.objectStore(tableName);\r\n\t}\r\n}","if(!isNode && options.websql === undefined) options.websql = true;\r\nif(options.websql){\r\n\tWebSQLStructure(function(){\r\n\t\t// Fallback to IndexedDB\r\n\t\tconsole.warn(\"Fallback to IndexedDB\");\r\n\t\tIDBStructure();\r\n\t});\r\n}\r\n\r\nfunction WebSQLStructure(initError){\r\n\tSQLQueryBuilder();\r\n\r\n\tscope.SQLQuery = function(query, values, successCallback, errorCallback){\r\n\t\tif(options.debug) options.debug(query, values);\r\n\r\n\t\tscope.db.transaction(function(tx){\r\n\t\t\ttx.executeSql(query, values, function(tx, res){\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(successCallback){\r\n\t\t\t\t\tvar readOnly = res && res.rows ? res.rows : res; // SQLResultSetRowList is immutable\r\n\t\t\t\t\tif(res && res.rowsAffected && !readOnly.length){\r\n\t\t\t\t\t\tsuccessCallback(res.rowsAffected);\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(readOnly.length){\r\n\t\t\t\t\t\tvar result = {length:readOnly.length};\r\n\t\t\t\t\t\tfor (var i = 0; i < readOnly.length; i++) {\r\n\t\t\t\t\t\t\tresult[i] = readOnly[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\tsuccessCallback(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse successCallback([]);\r\n\t            }\r\n\t\t\t}, function(tx, error){\r\n\t\t\t\tvar msg = 'Database Error: ' + error.message;\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\t\telse console.error(msg);\r\n\t\t\t});\r\n\t\t}, function(error){\r\n\t\t\tvar msg = 'Database Transaction Error: ' + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction initializeTable(disablePlugin){\r\n\t\tif(!disablePlugin && window.sqlitePlugin){\r\n\t\t\tscope.db = window.sqlitePlugin.openDatabase({name: databaseName, location: 'default'}, checkStructure, function(){\r\n\t\t\t\tconsole.error_(\"Failed to initialize sqlitePlugin\");\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tinitializeTable(true);\r\n\t\t\t\t}, 500);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if(window.openDatabase){\r\n\t\t\tscope.db = window.openDatabase(databaseName, \"1.0\", databaseName, 1024);\r\n\t\t\tif(scope.db) setTimeout(checkStructure, 500);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.error('WebSQL is not supported on this browser');\r\n\t\t\tif(initError) initError();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeTable();\r\n}","function SQLQueryBuilder(){\r\n\t// structure must have `scope.SQLQuery`\r\n\r\n\tfunction validateText(text){\r\n\t\tvar matches = text.match(/[a-zA-Z0-9_\\.]+/i);\r\n\t\treturn '`'+matches[0]+'`';\r\n\t}\r\n\r\n\t//{('AND', 'OR'), 'ORDER':{columnName:'ASC', 'DESC'}, 'LIMIT':[startIndex, rowsLimit]}\r\n\r\n\t// ex: [\"AND\"=>[\"id\"=>12, \"OR\"=>[\"name#1\"=>\"myself\", \"name\"=>\"himself\"]], \"LIMIT\"=>1]\r\n\t\t// Select one where (id == 12 && (name == \"myself\" || name == \"himself\"))\r\n\tscope.makeWhere = function(object, comparator, children){\r\n\t\tif(!object) return ['', []];\r\n\t\tvar wheres = [];\r\n\r\n\t\tvar objectData = [];\r\n\t\tvar columns = Object.keys(object);\r\n\t\tvar defaultConditional = ' AND ';\r\n\t\tvar specialList = ['order', 'limit'];\r\n\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tvar value = object[columns[i]];\r\n\r\n\t\t\tvar matches = columns[i].match(/([a-zA-Z0-9_\\.]+)(\\[(\\>\\=?|\\<\\=?|\\!|\\<\\>|\\>\\<|\\!?~)\\])?/);\r\n\t\t\tvar check = matches[1].toLowerCase();\r\n\t\t\tif(check==='and' || check==='or') continue;\r\n\t\t\tif(!children && specialList.indexOf(check)!==-1) continue;\r\n\r\n\t\t\tif(matches[3]){\r\n\t\t\t\tif((['>', '>=', '<', '<=']).indexOf(matches[3])!==-1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!isNaN(value))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twheres.push(matches[1] + ' ' + matches[3] + ' ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvar msg = 'SQL where: value of ' + matches[1] + ' is non-numeric and can\\'t be accepted';\r\n\t\t\t\t\t\tconsole.error(msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(matches[3] === '!')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar type = value === null || value === undefined ? false : value.constructor;\r\n\t\t\t\t\tif(!type)\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IS NOT NULL');\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(type === Array){\r\n\t\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' NOT IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse if(type === Number || type === Boolean || type === String){\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' != ?');\r\n\t\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type.name + ' can\\'t be accepted');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (matches[3] === '~' || matches[3] === '!~')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(value.constructor !== Array){\r\n\t\t\t\t\t\tvalue = [value];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar likes = [];\r\n\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\tlikes.push(matches[1] + (matches[3] === '!~' ? ' NOT' : '') + ' LIKE ?');\r\n\t\t\t\t\t\tif(value.indexOf('%') === -1) value[a] = '%'+value[a]+'%';\r\n\t\t\t\t\t\tobjectData.push(value[a]);\r\n\t\t\t\t\t}\r\n\r\n                    wheres.push('('+likes.join(' OR ')+')');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar type = value === null || value === undefined ? false : value.constructor;\r\n\t\t\t\tif(!type)\r\n\t\t\t\t\twheres.push(matches[1] + ' IS NULL');\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(type === Array){\r\n\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(type === Number || type === Boolean || type === String){\r\n\t\t\t\t\t\twheres.push(matches[1] + ' = ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type.name + ' can\\'t be accepted');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < columns.length; i++) {\r\n\t\t\tif(columns[i]==='ORDER'||columns[i]==='LIMIT')\r\n                continue;\r\n\r\n\t\t\tvar test = columns[i].split('AND');\r\n\t\t\tvar haveRelation = false;\r\n\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\tdefaultConditional = ' AND ';\r\n\t\t\t\thaveRelation = true;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttest = columns[i].split('OR');\r\n\t\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\t\tdefaultConditional = ' OR ';\r\n\t\t\t\t\thaveRelation = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(haveRelation){\r\n\t\t\t\tvar childs = scope.makeWhere(object[columns[i]], defaultConditional, true);\r\n\t\t\t\twheres.push('('+childs[0]+')');\r\n\t\t\t\tobjectData = objectData.concat(childs[1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar options = '';\r\n\t\tif(object['ORDER']){\r\n\t\t\tvar columns = Object.keys(object['ORDER']);\r\n\t\t\tvar stack = [];\r\n\t\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\t\tvar order = object['ORDER'][columns[i]].toUpperCase();\r\n\t\t\t\tif(order !== 'ASC' && order !== 'DESC') continue;\r\n\t\t\t\tstack.push(validateText(columns[i]) + ' ' + order);\r\n\t\t\t}\r\n\t\t\toptions = options + ' ORDER BY ' + stack.join(', ');\r\n\t\t}\r\n\t\tif(object['LIMIT']){\r\n\t\t\tif(!isNaN(object['LIMIT'][0]) && !isNaN(object['LIMIT'][1])){\r\n\t\t\t\toptions = options + ' LIMIT ' + object['LIMIT'][1] + ' OFFSET ' + object['LIMIT'][0];\r\n\t\t\t}\r\n\t\t\telse if(!isNaN(object['LIMIT'])){\r\n\t\t\t\toptions = options + ' LIMIT '+ object['LIMIT'];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar where_ = '';\r\n\t\tif(wheres.length!==0){\r\n\t\t\tif(!children)\r\n\t\t\t\twhere_ = \" WHERE \";\r\n\t\t\twhere_ = where_ + wheres.join(comparator ? comparator : defaultConditional);\r\n\t\t}\r\n\r\n\t\treturn [where_ + options, objectData];\r\n\t}\r\n\r\n\tscope.createTable = function(tableName, columns, successCallback, errorCallback){\r\n\t\tvar columns_ = Object.keys(columns);\r\n\t\tfor(var i = 0; i < columns_.length; i++){\r\n\t\t\tif(columns_[i][0] === '$')\r\n\t\t\t\tcolumns_[i] = columns_[i].slice(1);\r\n\r\n\t\t\tif(columns[columns_[i]].constructor === Array)\r\n\t\t\t\tcolumns_[i] = validateText(columns_[i]) + ' ' + columns[columns_[i]].join(' ').toUpperCase();\r\n\t\t\telse\r\n\t\t\t\tcolumns_[i] = validateText(columns_[i]) + ' ' + String(columns[columns_[i]]).toUpperCase();\r\n\t\t}\r\n\t\tvar query = 'CREATE TABLE IF NOT EXISTS '+validateText(tableName)+' ('+columns_.join(', ')+')';\r\n\r\n\t\tscope.SQLQuery(query, [], successCallback, errorCallback);\r\n\t}\r\n\r\n\t//Select separated by comma\r\n\tscope.select = function(tableName, select, where, successCallback, errorCallback){\r\n\t\tvar select_ = select;\r\n\t\t\r\n\t\tif(select !== '*'){\r\n\t\t\tif(select.constructor === String)\r\n\t\t\t\tselect_ = [select];\r\n\r\n\t\t\tfor(var i = 0; i < select_.length; i++){\r\n\t\t\t\tselect_[i] = validateText(select_[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse select_ = false;\r\n\t\t\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar query = \"SELECT \" + (select_?select_.join(', '):select) + \" FROM \" + validateText(tableName) + wheres[0];\r\n\r\n\t\tscope.SQLQuery(query, wheres[1], function(data){\r\n\t\t\tif(data.length !== 0 && preprocessData(tableName, 'get', data[0])){\r\n\t\t\t\tfor (var i = 1; i < data.length; i++) {\r\n\t\t\t\t\tpreprocessData(tableName, 'get', data[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsuccessCallback(data);\r\n\t\t}, errorCallback);\r\n\t}\r\n\r\n\tscope.has = function(tableName, where, successCallback, errorCallback){\r\n\t\twhere.LIMIT = 1;\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar query = \"SELECT 1 FROM \" + validateText(tableName) + wheres[0];\r\n\r\n\t\tscope.SQLQuery(query, wheres[1], function(data){\r\n\t\t\tif(data.length !== 0)\r\n\t\t\t\treturn successCallback(true);\r\n\t\t\tsuccessCallback(false);\r\n\t\t}, errorCallback);\r\n\t}\r\n\r\n\tscope.get = function(tableName, select, where, successCallback, errorCallback){\r\n\t\twhere.LIMIT = 1;\r\n\t\tscope.select(tableName, select, where, function(rows){\r\n\t\t\tif(rows.length === 0)\r\n\t\t\t\tsuccessCallback(null);\r\n\t\t\telse if(select.constructor === Array)\r\n\t\t\t\tsuccessCallback(rows[0]);\r\n\t\t\telse successCallback(rows[0][select]);\r\n\t\t}, errorCallback);\r\n\t}\r\n\r\n\tscope.delete = function(tableName, where, successCallback, errorCallback){\r\n\t\tif(where){\r\n\t\t\tvar wheres = scope.makeWhere(where);\r\n\t\t\tvar query = \"DELETE FROM \" + validateText(tableName) + wheres[0];\r\n\t\t\tscope.SQLQuery(query, wheres[1], successCallback, errorCallback);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar query = \"TRUNCATE TABLE \" + validateText(tableName);\r\n\t\t\tscope.SQLQuery(query, [], successCallback, function(msg){\r\n\t\t\t\tif(msg.indexOf('syntax error') !== -1) // WebSQL may not support truncate function\r\n\t\t\t\t\tscope.delete(tableName, [], successCallback, errorCallback);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tscope.insert = function(tableName, object, successCallback, errorCallback){\r\n\t\tvar objectName = [];\r\n\t\tvar objectName_ = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(validateText(columns[i]));\r\n\t\t\tobjectName_.push('?');\r\n\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"INSERT INTO \" + validateText(tableName) + \" (\" + objectName.join(', ') + \") VALUES (\" + objectName_.join(', ') + \")\";\r\n\t\t\r\n\t\tscope.SQLQuery(query, objectData, successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.update = function(tableName, object, where, successCallback, errorCallback){\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar objectName = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(validateText(columns[i])+' = ?');\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"UPDATE \" + validateText(tableName) + \" SET \" + objectName.join(', ') + wheres[0];\r\n\t\tscope.SQLQuery(query, objectData.concat(wheres[1]), successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.drop = function(tableName, successCallback, errorCallback){\r\n\t\tscope.SQLQuery(\"DROP TABLE \"+validateText(tableName), [], successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.closeDatabase = function(){\r\n\t\tif(scope.polyfill) return;\r\n\t\tscope.db.close(function(){\r\n\t\t\t// Success\r\n\t\t}, function(error){\r\n\t\t\tvar msg = \"Error closing Database:\" + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n}","}\r\n\r\n// isNode\r\nif(typeof process !== 'undefined' && process.execPath)\r\n\tmodule.exports = SFDatabase;"]}