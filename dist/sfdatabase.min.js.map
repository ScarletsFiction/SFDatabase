{"version":3,"sources":["_head.js","SQL.js","IDB.js","WebSQL.js","MySQL.js"],"names":["SFDatabase","databaseName","options","onConnected","scope","this","db","pending","initialized","debug","initFinish","setTimeout","resumePending","pendingTimer","clearTimeout","length","i","splice","destroyObject","obj","Array","objKeys","Object","keys","preprocessTable","preprocessData","tableName","mode","object","found","isNode","process","execPath","onStructureInitialize","checkStructure","callback","table","databaseStructure","queued","reduceQueue","console","error","createTable","SQLQueryBuilder","validateText","text","match","makeWhere","comparator","children","wheres","objectData","columns","defaultConditional","specialList","value","matches","check","toLowerCase","indexOf","isNaN","push","msg","type","constructor","name","temp","a","join","concat","likes","test","split","haveRelation","childs","stack","order","toUpperCase","where_","successCallback","errorCallback","columns_","String","query","SQLQuery","select","where","select_","data","delete","insert","objectName","objectName_","object_","JSON","parse","stringify","update","drop","closeDatabase","polyfill","close","message","IDBStructure","initError","IDBWhere","regexEscape","IDBLimit","prepareQuery","rules","ORCondition","currentCondition","rules_","rule","operationCondition","undefined","likeCode","regexed","rule_","slice","replace","exist","RegExp","processed","startFrom","limit","objectStore","LIMIT","ORDER","cursor","index","openCursor","key","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","col","createIndex","unique","e","duplicated","objectStoreRequest","getObjectStore","add","onerror","onsuccess","ev","target","result","operation","event","code","continue","deleteObjectStore","initializeTable","window","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","IDBKeyRange","webkitIDBKeyRange","msIDBKeyRange","storage","open","onupgradeneeded","versionchange","action","transaction","WebSQLStructure","values","tx","executeSql","res","readOnly","rows","rowsAffected","disablePlugin","sqlitePlugin","openDatabase","location","error_","websql","warn","mysql","require","createPool","host","user","password","database","on","hideInitialization","log","getConnection","err1","connection","release","err","sqlMessage","sql","MySQLStructure"],"mappings":"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","file":"sfdatabase.min.js","sourcesContent":["/*\r\n\tScarletsFiction Database Library\r\n\tA simple database library for browser and nodejs\r\n\thttps://github.com/ScarletsFiction/SFDatabase-js\r\n\t\r\n\tMake sure you include this header on this script\r\n*/\r\n\r\n'use strict';\r\n\r\n// Ext-AlaSQL.js are required for browser only if the browser didn't support WebSQL\r\nfunction SFDatabase(databaseName, options, onConnected){\r\n\tvar scope = this;\r\n\tscope.db = null;\r\n\tscope.pending = [];\r\n\tscope.initialized = false;\r\n\tif(!options)\r\n\t\toptions = {debug:false};\r\n\r\n\tvar initFinish = function(){\r\n\t\tif(scope.initialized) return;\r\n\t\tscope.initialized = true;\r\n\r\n\t\tif(onConnected){\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(!onConnected(resumePending))\r\n\t\t\t\t\tresumePending();\r\n\t\t\t}, 1);\r\n\t\t}\r\n\t\telse resumePending();\r\n\t}\r\n\r\n\tvar pendingTimer = -1;\r\n\tvar resumePending = function(){\r\n\t\tif(!scope.db){\r\n\t\t\tclearTimeout(pendingTimer);\r\n\t\t\tpendingTimer = setTimeout(resumePending, 1000);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!scope.pending.length) return;\r\n\t\tfor (var i = 0; i < scope.pending.length; i++) {\r\n\t\t\tscope.pending[i]();\r\n\t\t}\r\n\t\tscope.pending.splice(0);\r\n\t}\r\n\r\n\tvar destroyObject = function(obj){\r\n\t\tif(!obj || typeof obj !== 'object') return;\r\n\t\tif(obj instanceof Array)\r\n\t\t\tobj.splice(0);\r\n\t\telse {\r\n\t\t\tvar objKeys = Object.keys(obj);\r\n\t\t\tfor (var i = 0; i < objKeys.length; i++) {\r\n\t\t\t\tdelete obj[objKeys[i]];\r\n\t\t\t}\r\n\t\t}\r\n\t\tobj = null;\r\n\t}\r\n\r\n\tscope.preprocessTable = {}; // {tableName:{columnName:{set:function, get:function}}}}\r\n\tvar preprocessData = function(tableName, mode, object){\r\n\t\tvar found = false;\r\n\t\tif(!scope.preprocessTable[tableName]) return found;\r\n\r\n\t\tvar keys = Object.keys(scope.preprocessTable[tableName]);\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tif(!object[keys[i]] || !scope.preprocessTable[tableName][keys[i]][mode])\r\n\t\t\t\tcontinue;\r\n\t\t\tobject[keys[i]] = scope.preprocessTable[tableName][keys[i]][mode](object[keys[i]]);\r\n\t\t\tfound = true;\r\n\t\t}\r\n\t\treturn found;\r\n\t}\r\n\r\n\tvar isNode = typeof process !== 'undefined' && process.execPath;\r\n\tif(!isNode){\r\n\t\tvar onStructureInitialize = null;\r\n\t\tvar checkStructure = function(callback){\r\n\t\t\tvar table = Object.keys(options.databaseStructure);\r\n\r\n\t\t\tvar queued = table.length;\r\n\t\t\tvar reduceQueue = function(){\r\n\t\t\t\tqueued--;\r\n\t\t\t\tif(queued === 0){\r\n\t\t\t\t\tif(!callback) initFinish(scope);\r\n\t\t\t\t\telse callback();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(queued > 1)\r\n\t\t\t\t\tconsole.error(\"Failed to initialize database structure\");\r\n\t\t\t}, 5000);\r\n\r\n\t\t\tfor (var i = 0; i < table.length; i++) {\r\n\t\t\t\tscope.createTable(table[i], options.databaseStructure[table[i]], reduceQueue);\r\n\t\t\t}\r\n\r\n\t\t\tif(onStructureInitialize){\r\n\t\t\t\tonStructureInitialize();\r\n\t\t\t\tonStructureInitialize = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// Load all query builder from here","function SQLQueryBuilder(){\r\n\t// structure must have `scope.SQLQuery`\r\n\r\n\tfunction validateText(text){\r\n\t\tvar matches = text.match(/[a-zA-Z0-9_\\.]+/i);\r\n\t\treturn '`'+matches[0]+'`';\r\n\t}\r\n\r\n\t//{('AND', 'OR'), 'ORDER':{columnName:'ASC', 'DESC'}, 'LIMIT':[startIndex, rowsLimit]}\r\n\r\n\t// ex: [\"AND\"=>[\"id\"=>12, \"OR\"=>[\"name#1\"=>\"myself\", \"name\"=>\"himself\"]], \"LIMIT\"=>1]\r\n\t\t// Select one where (id == 12 && (name == \"myself\" || name == \"himself\"))\r\n\tscope.makeWhere = function(object, comparator, children){\r\n\t\tif(!object) return ['', []];\r\n\t\tvar wheres = [];\r\n\r\n\t\tvar objectData = [];\r\n\t\tvar columns = Object.keys(object);\r\n\t\tvar defaultConditional = ' AND ';\r\n\t\tvar specialList = ['order', 'limit'];\r\n\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tvar value = object[columns[i]];\r\n\r\n\t\t\tvar matches = columns[i].match(/([a-zA-Z0-9_\\.]+)(\\[(\\>\\=?|\\<\\=?|\\!|\\<\\>|\\>\\<|\\!?~)\\])?/);\r\n\t\t\tvar check = matches[1].toLowerCase();\r\n\t\t\tif(check==='and' || check==='or') continue;\r\n\t\t\tif(!children && specialList.indexOf(check)!==-1) continue;\r\n\r\n\t\t\tif(matches[3]){\r\n\t\t\t\tif((['>', '>=', '<', '<=']).indexOf(matches[3])!==-1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!isNaN(value))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twheres.push(matches[1] + ' ' + matches[3] + ' ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvar msg = 'SQL where: value of ' + matches[1] + ' is non-numeric and can\\'t be accepted';\r\n\t\t\t\t\t\tconsole.error(msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(matches[3] === '!')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar type = value===null || value===undefined ? false : value.constructor.name;\r\n\t\t\t\t\tif(!type)\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IS NOT NULL');\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(type==='Array'){\r\n\t\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' NOT IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse if(type==='Number' || type==='Boolean' || type==='String'){\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' != ?');\r\n\t\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type + ' can\\'t be accepted');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (matches[3] === '~' || matches[3] === '!~')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(value.constructor !== Array){\r\n\t\t\t\t\t\tvalue = [value];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar likes = [];\r\n\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\tlikes.push(matches[1] + (matches[3] === '!~' ? ' NOT' : '') + ' LIKE ?');\r\n\t\t\t\t\t\tif(value.indexOf('%') === -1) value[a] = '%'+value[a]+'%';\r\n\t\t\t\t\t\tobjectData.push(value[a]);\r\n\t\t\t\t\t}\r\n\r\n                    wheres.push('('+likes.join(' OR ')+')');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar type = value===null || value===undefined ? false : value.constructor.name;\r\n\t\t\t\tif(!type)\r\n\t\t\t\t\twheres.push(matches[1] + ' IS NULL');\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(type==='Array'){\r\n\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(type==='Number' || type==='Boolean' || type==='String'){\r\n\t\t\t\t\t\twheres.push(matches[1] + ' = ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type + ' can\\'t be accepted');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < columns.length; i++) {\r\n\t\t\tif(columns[i]==='ORDER'||columns[i]==='LIMIT')\r\n                continue;\r\n\r\n\t\t\tvar test = columns[i].split('AND');\r\n\t\t\tvar haveRelation = false;\r\n\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\tdefaultConditional = ' AND ';\r\n\t\t\t\thaveRelation = true;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttest = columns[i].split('OR');\r\n\t\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\t\tdefaultConditional = ' OR ';\r\n\t\t\t\t\thaveRelation = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(haveRelation){\r\n\t\t\t\tvar childs = scope.makeWhere(object[columns[i]], defaultConditional, true);\r\n\t\t\t\twheres.push('('+childs[0]+')');\r\n\t\t\t\tobjectData = objectData.concat(childs[1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar options = '';\r\n\t\tif(object['ORDER']){\r\n\t\t\tvar columns = Object.keys(object['ORDER']);\r\n\t\t\tvar stack = [];\r\n\t\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\t\tvar order = object['ORDER'][columns[i]].toUpperCase();\r\n\t\t\t\tif(order !== 'ASC' && order !== 'DESC') continue;\r\n\t\t\t\tstack.push(validateText(columns[i]) + ' ' + order);\r\n\t\t\t}\r\n\t\t\toptions = options + ' ORDER BY ' + stack.join(', ');\r\n\t\t}\r\n\t\tif(object['LIMIT']){\r\n\t\t\tif(!isNaN(object['LIMIT'][0]) && !isNaN(object['LIMIT'][1])){\r\n\t\t\t\toptions = options + ' LIMIT ' + object['LIMIT'][1] + ' OFFSET ' + object['LIMIT'][0];\r\n\t\t\t}\r\n\t\t\telse if(!isNaN(object['LIMIT'])){\r\n\t\t\t\toptions = options + ' LIMIT '+ object['LIMIT'];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar where_ = '';\r\n\t\tif(wheres.length!==0){\r\n\t\t\tif(!children)\r\n\t\t\t\twhere_ = \" WHERE \";\r\n\t\t\twhere_ = where_ + wheres.join(comparator ? comparator : defaultConditional);\r\n\t\t}\r\n\r\n\t\treturn [where_ + options, objectData];\r\n\t}\r\n\r\n\tscope.createTable = function(tableName, columns, successCallback, errorCallback)\r\n\t{\r\n\t\tvar columns_ = Object.keys(columns);\r\n\t\tfor(var i = 0; i < columns_.length; i++){\r\n\t\t\tif(columns[columns_[i]].constructor.name === 'Array')\r\n\t\t\t\tcolumns_[i] = validateText(columns_[i])+' '+columns[columns_[i]][0].toUpperCase()+' '+validateText(columns[columns_[i]][1]);\r\n\t\t\telse\r\n\t\t\t\tcolumns_[i] = validateText(columns_[i])+' '+String(columns[columns_[i]]).toUpperCase();\r\n\t\t}\r\n\t\tvar query = 'CREATE TABLE IF NOT EXISTS '+validateText(tableName)+' ('+columns_.join(', ')+')';\r\n\r\n\t\tscope.SQLQuery(query, [], successCallback, errorCallback);\r\n\t}\r\n\r\n\t//Select separated by comma\r\n\tscope.select = function(tableName, select, where, successCallback, errorCallback){\r\n\t\tvar select_ = select;\r\n\t\tif(select!=='*')\r\n\t\t\tfor(var i = 0; i < select_.length; i++){\r\n\t\t\t\tselect_[i] = validateText(select_[i]);\r\n\t\t\t}\r\n\t\telse select_ = false;\r\n\t\t\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar query = \"SELECT \" + (select_?select_.join(', '):select) + \" FROM \" + validateText(tableName) + wheres[0];\r\n\r\n\t\tscope.SQLQuery(query, wheres[1], function(data){\r\n\t\t\tif(!successCallback) return;\r\n\t\t\tif(data.length!==0 && preprocessData(tableName, 'get', data[0])){\r\n\t\t\t\tfor (var i = 1; i < data.length; i++) {\r\n\t\t\t\t\tpreprocessData(tableName, 'get', data[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsuccessCallback(data);\r\n\t\t}, errorCallback);\r\n\t}\r\n\r\n\tscope.delete = function(tableName, where, successCallback, errorCallback){\r\n\t\tif(where){\r\n\t\t\tvar wheres = scope.makeWhere(where);\r\n\t\t\tvar query = \"DELETE FROM \" + validateText(tableName) + wheres[0];\r\n\t\t\tscope.SQLQuery(query, wheres[1], successCallback, errorCallback);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar query = \"TRUNCATE TABLE \" + validateText(tableName);\r\n\t\t\tscope.SQLQuery(query, [], successCallback, function(msg){\r\n\t\t\t\tif(msg.indexOf('syntax error')!==-1) // WebSQL may not support truncate function\r\n\t\t\t\t\tscope.delete(tableName, [], successCallback, errorCallback);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tscope.insert = function(tableName, object, successCallback, errorCallback){\r\n\t\tvar objectName = [];\r\n\t\tvar objectName_ = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(validateText(columns[i]));\r\n\t\t\tobjectName_.push('?');\r\n\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"INSERT INTO \" + validateText(tableName) + \" (\" + objectName.join(', ') + \") VALUES (\" + objectName_.join(', ') + \")\";\r\n\t\t\r\n\t\tscope.SQLQuery(query, objectData, successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.update = function(tableName, object, where, successCallback, errorCallback){\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar objectName = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(validateText(columns[i])+' = ?');\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"UPDATE \" + validateText(tableName) + \" SET \" + objectName.join(', ') + wheres[0];\r\n\t\tscope.SQLQuery(query, objectData.concat(wheres[1]), successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.drop = function(tableName, successCallback, errorCallback){\r\n\t\tscope.SQLQuery(\"DROP TABLE \"+validateText(tableName), [], successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.closeDatabase = function(){\r\n\t\tif(scope.polyfill) return;\r\n\t\tscope.db.close(function(){\r\n\t\t\t// Success\r\n\t\t}, function(error){\r\n\t\t\tvar msg = \"Error closing Database:\" + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n}","if(!isNode && !options.websql){\r\n\tIDBStructure(function(){\r\n\t\t// Fallback to WebSQL\r\n\t\tconsole.warn(\"Fallback to WebSQL\");\r\n\t\tWebSQLStructure();\r\n\t});\r\n}\r\n\r\nfunction IDBStructure(initError){\r\n\tIDBQueryBuilder();\r\n\r\n\tif(!window.indexedDB)\r\n  \t\twindow.indexedDB = window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n\tif(!window.IDBTransaction)\r\n\t\twindow.IDBTransaction = window.webkitIDBTransaction || window.msIDBTransaction;\r\n\tif(!window.IDBKeyRange)\r\n\t\twindow.IDBKeyRange = window.webkitIDBKeyRange || window.msIDBKeyRange;\r\n\r\n\tif(!window.indexedDB || !window.IDBTransaction || !window.IDBKeyRange){\r\n\t\tif(initError) initError();\r\n\t\treturn;\r\n\t}\r\n\r\n\tscope.storage = 'indexeddb';\r\n\tscope.db = window.indexedDB.open(databaseName, 1);\r\n\tscope.db.onerror = initError;\r\n\r\n\tscope.db.onupgradeneeded = scope.db.versionchange = function(ev){\r\n\t\tif(scope.db.result)\r\n\t\t\tscope.db = scope.db.result;\r\n\r\n\t\tcheckStructure(function(){});\r\n\t};\r\n\r\n\tscope.db.onsuccess = function(ev){\r\n\t\tif(scope.db.result)\r\n\t\t\tscope.db = scope.db.result;\r\n\r\n\t\tcheckStructure(function(){\r\n\t\t\tinitFinish(scope);\r\n\t\t});\r\n\t};\r\n\r\n\t//action = readwrite, readonly\r\n\tscope.getObjectStore = function(tableName, action, errorCallback){\r\n  \t\tvar transaction = scope.db.transaction(tableName, action);\r\n  \t\ttransaction.onerror = errorCallback || console.error;\r\n  \t\treturn transaction.objectStore(tableName);\r\n\t}\r\n}","if(!isNode && options.websql === undefined) options.websql = true;\r\nif(options.websql){\r\n\tWebSQLStructure(function(){\r\n\t\t// Fallback to IndexedDB\r\n\t\tconsole.warn(\"Fallback to IndexedDB\");\r\n\t\tIDBStructure();\r\n\t});\r\n}\r\n\r\nfunction WebSQLStructure(initError){\r\n\tSQLQueryBuilder();\r\n\r\n\tscope.SQLQuery = function(query, values, successCallback, errorCallback){\r\n\t\tif(options.debug) options.debug(query, values);\r\n\r\n\t\tscope.db.transaction(function(tx){\r\n\t\t\ttx.executeSql(query, values, function(tx, res){\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(successCallback){\r\n\t\t\t\t\tvar readOnly = res && res.rows ? res.rows : res; // SQLResultSetRowList is immutable\r\n\t\t\t\t\tif(res && res.rowsAffected && !readOnly.length){\r\n\t\t\t\t\t\tsuccessCallback(res.rowsAffected);\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(readOnly.length){\r\n\t\t\t\t\t\tvar result = {length:readOnly.length};\r\n\t\t\t\t\t\tfor (var i = 0; i < readOnly.length; i++) {\r\n\t\t\t\t\t\t\tresult[i] = readOnly[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\tsuccessCallback(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse successCallback([]);\r\n\t            }\r\n\t\t\t}, function(tx, error){\r\n\t\t\t\tvar msg = 'Database Error: ' + error.message;\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\t\telse console.error(msg);\r\n\t\t\t});\r\n\t\t}, function(error){\r\n\t\t\tvar msg = 'Database Transaction Error: ' + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction initializeTable(disablePlugin){\r\n\t\tif(!disablePlugin && window.sqlitePlugin){\r\n\t\t\tscope.db = window.sqlitePlugin.openDatabase({name: databaseName, location: 'default'}, checkStructure, function(){\r\n\t\t\t\tconsole.error_(\"Failed to initialize sqlitePlugin\");\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tinitializeTable(true);\r\n\t\t\t\t}, 500);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if(window.openDatabase){\r\n\t\t\tscope.db = window.openDatabase(databaseName, \"1.0\", databaseName, 1024);\r\n\t\t\tif(scope.db) setTimeout(checkStructure, 500);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.error('WebSQL is not supported on this browser');\r\n\t\t\tif(initError) initError();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeTable();\r\n}","if(isNode && options.mysql === undefined) options.mysql = true;\r\nif(options.mysql){\r\n\tMySQLStructure();\r\n}\r\n\r\nfunction MySQLStructure(initError){\r\n\tSQLQueryBuilder();\r\n\r\n\tvar mysql = require('mysql');\r\n\tscope.db = mysql.createPool({\r\n\t\thost:options.host?options.host:'localhost',\r\n\t\tuser:options.user?options.user:'root',\r\n\t\tpassword:options.password?options.password:'',\r\n\t\tdatabase:databaseName\r\n\t});\r\n\r\n\tif(onConnected) scope.db.on('connection', initFinish);\r\n\tif(!options.hideInitialization)\r\n\t\tconsole.log(\"Connecting to \"+databaseName+\" database\");\r\n\r\n\tscope.SQLQuery = function(query, values, successCallback, errorCallback){\r\n\t\tif(options.debug) options.debug(query, values);\r\n\r\n\t\tscope.db.getConnection(function(err1, connection){\r\n\t        if(err1){\r\n\t            connection.release();\r\n\t            if(errorCallback) errorCallback(err1);\r\n\t            else console.error(err1);\r\n\t            return;\r\n\t        }\r\n\r\n\t        connection.query(query, values, function(err, rows){\r\n\t            connection.release();\r\n\t            destroyObject(values);\r\n\t            values = null;\r\n\t            query = null;\r\n\r\n\t            if(!err&&successCallback) setTimeout(function(){\r\n\t            \tsuccessCallback(rows);\r\n\t            }, 0);\r\n\t            else if(err) setTimeout(function(){\r\n\t            \tvar error = {msg:err.sqlMessage, query:err.sql, code:err.code};\r\n\t\t            if(errorCallback) errorCallback(error);\r\n\t\t            else console.error(error);\r\n\t            }, 0);\r\n\t        });\r\n\t    });\r\n\t}\r\n}"]}