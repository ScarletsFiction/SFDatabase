{"version":3,"sources":["_head.js","SQL.js","IDB.js","WebSQL.js","MySQL.js"],"names":["SFDatabase","databaseName","options","onConnected","scope","this","db","pending","initialized","debug","initFinish","setTimeout","resumePending","pendingTimer","clearTimeout","length","i","splice","destroyObject","obj","Array","objKeys","Object","keys","preprocessTable","preprocessData","tableName","mode","object","found","isNode","process","execPath","onStructureInitialize","checkStructure","table","databaseStructure","queued","reduceQueue","console","error","createTable","SQLQueryBuilder","validateText","text","match","makeWhere","comparator","children","wheres","objectData","columns","defaultConditional","specialList","value","matches","check","toLowerCase","indexOf","isNaN","push","msg","type","constructor","name","temp","a","join","concat","likes","test","split","haveRelation","childs","stack","order","toUpperCase","where_","successCallback","errorCallback","columns_","String","query","SQLQuery","select","where","select_","data","delete","insert","objectName","objectName_","object_","JSON","parse","stringify","update","drop","closeDatabase","polyfill","close","message","IDBStructure","initError","IDBWhere","IDBDataOrder","regexEscape","rules","ORCondition","currentCondition","rules_","operationCondition","undefined","likeCode","regexed","slice","replace","RegExp","ref","checkOnly","column","sort","sorterByKey","LIMIT","ORDER","objectStoreNames","contains","objectStore","createObjectStore","keyPath","autoIncrement","col","createIndex","unique","e","duplicated","objectStoreRequest","getObjectStore","add","onerror","onsuccess","ev","target","result","openCursor","ordered","filteredData","orderedData","operation","event","cursor","continue","processed","put","deleteObjectStore","initializeTable","window","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","IDBKeyRange","webkitIDBKeyRange","msIDBKeyRange","storage","open","onupgradeneeded","versionchange","action","transaction","WebSQLStructure","disablePlugin","values","tx","executeSql","res","readOnly","rows","rowsAffected","sqlitePlugin","openDatabase","location","error_","websql","mysql","require","createPool","host","user","password","database","on","hideInitialization","log","getConnection","err1","connection","release","err","sqlMessage","sql","code","MySQLStructure"],"mappings":"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","file":"sfdatabase.min.js","sourcesContent":["/*\r\n\tScarletsFiction Database Library\r\n\tA simple database library for browser and nodejs\r\n\thttps://github.com/ScarletsFiction/SFDatabase-js\r\n\t\r\n\tMake sure you include this header on this script\r\n*/\r\n\r\n'use strict';\r\n\r\n// Ext-AlaSQL.js are required for browser only if the browser didn't support WebSQL\r\nfunction SFDatabase(databaseName, options, onConnected){\r\n\tvar scope = this;\r\n\tscope.db = null;\r\n\tscope.pending = [];\r\n\tscope.initialized = false;\r\n\tif(!options)\r\n\t\toptions = {debug:false};\r\n\r\n\tvar initFinish = function(){\r\n\t\tif(scope.initialized) return;\r\n\t\tscope.initialized = true;\r\n\r\n\t\tif(onConnected){\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(!onConnected(resumePending))\r\n\t\t\t\t\tresumePending();\r\n\t\t\t}, 1);\r\n\t\t}\r\n\t\telse resumePending();\r\n\t}\r\n\r\n\tvar pendingTimer = -1;\r\n\tvar resumePending = function(){\r\n\t\tif(!scope.db){\r\n\t\t\tclearTimeout(pendingTimer);\r\n\t\t\tpendingTimer = setTimeout(resumePending, 1000);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!scope.pending.length) return;\r\n\t\tfor (var i = 0; i < scope.pending.length; i++) {\r\n\t\t\tscope.pending[i]();\r\n\t\t}\r\n\t\tscope.pending.splice(0);\r\n\t}\r\n\r\n\tvar destroyObject = function(obj){\r\n\t\tif(!obj || typeof obj !== 'object') return;\r\n\t\tif(obj instanceof Array)\r\n\t\t\tobj.splice(0);\r\n\t\telse {\r\n\t\t\tvar objKeys = Object.keys(obj);\r\n\t\t\tfor (var i = 0; i < objKeys.length; i++) {\r\n\t\t\t\tdelete obj[objKeys[i]];\r\n\t\t\t}\r\n\t\t}\r\n\t\tobj = null;\r\n\t}\r\n\r\n\tscope.preprocessTable = {}; // {tableName:{columnName:{set:function, get:function}}}}\r\n\tvar preprocessData = function(tableName, mode, object){\r\n\t\tvar found = false;\r\n\t\tif(!scope.preprocessTable[tableName]) return found;\r\n\r\n\t\tvar keys = Object.keys(scope.preprocessTable[tableName]);\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tif(!object[keys[i]] || !scope.preprocessTable[tableName][keys[i]][mode])\r\n\t\t\t\tcontinue;\r\n\t\t\tobject[keys[i]] = scope.preprocessTable[tableName][keys[i]][mode](object[keys[i]]);\r\n\t\t\tfound = true;\r\n\t\t}\r\n\t\treturn found;\r\n\t}\r\n\r\n\tvar isNode = typeof process !== 'undefined' && process.execPath;\r\n\tif(!isNode){\r\n\t\tvar onStructureInitialize = null;\r\n\t\tvar checkStructure = function(){\r\n\t\t\tvar table = Object.keys(options.databaseStructure);\r\n\r\n\t\t\tvar queued = table.length;\r\n\t\t\tvar reduceQueue = function(){\r\n\t\t\t\tqueued--;\r\n\t\t\t\tif(queued === 0) initFinish(scope);\r\n\t\t\t};\r\n\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(queued > 1)\r\n\t\t\t\t\tconsole.error(\"Failed to initialize database structure\");\r\n\t\t\t}, 5000);\r\n\r\n\t\t\tfor (var i = 0; i < table.length; i++) {\r\n\t\t\t\tscope.createTable(table[i], options.databaseStructure[table[i]], reduceQueue);\r\n\t\t\t}\r\n\r\n\t\t\tif(onStructureInitialize){\r\n\t\t\t\tonStructureInitialize();\r\n\t\t\t\tonStructureInitialize = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// Load all query builder from here","function SQLQueryBuilder(){\r\n\t// structure must have `scope.SQLQuery`\r\n\r\n\tfunction validateText(text){\r\n\t\tvar matches = text.match(/[a-zA-Z0-9_\\.]+/i);\r\n\t\treturn '`'+matches[0]+'`';\r\n\t}\r\n\r\n\t//{('AND', 'OR'), 'ORDER':{columnName:'ASC', 'DESC'}, 'LIMIT':[startIndex, rowsLimit]}\r\n\r\n\t// ex: [\"AND\"=>[\"id\"=>12, \"OR\"=>[\"name#1\"=>\"myself\", \"name\"=>\"himself\"]], \"LIMIT\"=>1]\r\n\t\t// Select one where (id == 12 && (name == \"myself\" || name == \"himself\"))\r\n\tscope.makeWhere = function(object, comparator, children){\r\n\t\tif(!object) return ['', []];\r\n\t\tvar wheres = [];\r\n\r\n\t\tvar objectData = [];\r\n\t\tvar columns = Object.keys(object);\r\n\t\tvar defaultConditional = ' AND ';\r\n\t\tvar specialList = ['order', 'limit'];\r\n\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tvar value = object[columns[i]];\r\n\r\n\t\t\tvar matches = columns[i].match(/([a-zA-Z0-9_\\.]+)(\\[(\\>\\=?|\\<\\=?|\\!|\\<\\>|\\>\\<|\\!?~)\\])?/);\r\n\t\t\tvar check = matches[1].toLowerCase();\r\n\t\t\tif(check==='and' || check==='or') continue;\r\n\t\t\tif(!children && specialList.indexOf(check)!==-1) continue;\r\n\r\n\t\t\tif(matches[3]){\r\n\t\t\t\tif((['>', '>=', '<', '<=']).indexOf(matches[3])!==-1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!isNaN(value))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twheres.push(matches[1] + ' ' + matches[3] + ' ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvar msg = 'SQL where: value of ' + matches[1] + ' is non-numeric and can\\'t be accepted';\r\n\t\t\t\t\t\tconsole.error(msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(matches[3] === '!')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar type = value===null || value===undefined ? false : value.constructor.name;\r\n\t\t\t\t\tif(!type)\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IS NOT NULL');\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(type==='Array'){\r\n\t\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' NOT IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse if(type==='Number' || type==='Boolean' || type==='String'){\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' != ?');\r\n\t\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type + ' can\\'t be accepted');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (matches[3] === '~' || matches[3] === '!~')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(value.constructor !== Array){\r\n\t\t\t\t\t\tvalue = [value];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar likes = [];\r\n\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\tlikes.push(matches[1] + (matches[3] === '!~' ? ' NOT' : '') + ' LIKE ?');\r\n\t\t\t\t\t\tif(value.indexOf('%') === -1) value[a] = '%'+value[a]+'%';\r\n\t\t\t\t\t\tobjectData.push(value[a]);\r\n\t\t\t\t\t}\r\n\r\n                    wheres.push('('+likes.join(' OR ')+')');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar type = value===null || value===undefined ? false : value.constructor.name;\r\n\t\t\t\tif(!type)\r\n\t\t\t\t\twheres.push(matches[1] + ' IS NULL');\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(type==='Array'){\r\n\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(type==='Number' || type==='Boolean' || type==='String'){\r\n\t\t\t\t\t\twheres.push(matches[1] + ' = ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type + ' can\\'t be accepted');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < columns.length; i++) {\r\n\t\t\tif(columns[i]==='ORDER'||columns[i]==='LIMIT')\r\n                continue;\r\n\r\n\t\t\tvar test = columns[i].split('AND');\r\n\t\t\tvar haveRelation = false;\r\n\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\tdefaultConditional = ' AND ';\r\n\t\t\t\thaveRelation = true;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttest = columns[i].split('OR');\r\n\t\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\t\tdefaultConditional = ' OR ';\r\n\t\t\t\t\thaveRelation = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(haveRelation){\r\n\t\t\t\tvar childs = scope.makeWhere(object[columns[i]], defaultConditional, true);\r\n\t\t\t\twheres.push('('+childs[0]+')');\r\n\t\t\t\tobjectData = objectData.concat(childs[1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar options = '';\r\n\t\tif(object['ORDER']){\r\n\t\t\tvar columns = Object.keys(object['ORDER']);\r\n\t\t\tvar stack = [];\r\n\t\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\t\tvar order = object['ORDER'][columns[i]].toUpperCase();\r\n\t\t\t\tif(order !== 'ASC' && order !== 'DESC') continue;\r\n\t\t\t\tstack.push(validateText(columns[i]) + ' ' + order);\r\n\t\t\t}\r\n\t\t\toptions = options + ' ORDER BY ' + stack.join(', ');\r\n\t\t}\r\n\t\tif(object['LIMIT']){\r\n\t\t\tif(!isNaN(object['LIMIT'][0]) && !isNaN(object['LIMIT'][1])){\r\n\t\t\t\toptions = options + ' LIMIT ' + object['LIMIT'][1] + ' OFFSET ' + object['LIMIT'][0];\r\n\t\t\t}\r\n\t\t\telse if(!isNaN(object['LIMIT'])){\r\n\t\t\t\toptions = options + ' LIMIT '+ object['LIMIT'];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar where_ = '';\r\n\t\tif(wheres.length!==0){\r\n\t\t\tif(!children)\r\n\t\t\t\twhere_ = \" WHERE \";\r\n\t\t\twhere_ = where_ + wheres.join(comparator ? comparator : defaultConditional);\r\n\t\t}\r\n\r\n\t\treturn [where_ + options, objectData];\r\n\t}\r\n\r\n\tscope.createTable = function(tableName, columns, successCallback, errorCallback)\r\n\t{\r\n\t\tvar columns_ = Object.keys(columns);\r\n\t\tfor(var i = 0; i < columns_.length; i++){\r\n\t\t\tif(columns[columns_[i]].constructor.name === 'Array')\r\n\t\t\t\tcolumns_[i] = validateText(columns_[i])+' '+columns[columns_[i]][0].toUpperCase()+' '+validateText(columns[columns_[i]][1]);\r\n\t\t\telse\r\n\t\t\t\tcolumns_[i] = validateText(columns_[i])+' '+String(columns[columns_[i]]).toUpperCase();\r\n\t\t}\r\n\t\tvar query = 'CREATE TABLE IF NOT EXISTS '+validateText(tableName)+' ('+columns_.join(', ')+')';\r\n\r\n\t\tscope.SQLQuery(query, [], successCallback, errorCallback);\r\n\t}\r\n\r\n\t//Select separated by comma\r\n\tscope.select = function(tableName, select, where, successCallback, errorCallback){\r\n\t\tvar select_ = select;\r\n\t\tif(select!=='*')\r\n\t\t\tfor(var i = 0; i < select_.length; i++){\r\n\t\t\t\tselect_[i] = validateText(select_[i]);\r\n\t\t\t}\r\n\t\telse select_ = false;\r\n\t\t\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar query = \"SELECT \" + (select_?select_.join(', '):select) + \" FROM \" + validateText(tableName) + wheres[0];\r\n\r\n\t\tscope.SQLQuery(query, wheres[1], function(data){\r\n\t\t\tif(!successCallback) return;\r\n\t\t\tif(data.length!==0 && preprocessData(tableName, 'get', data[0])){\r\n\t\t\t\tfor (var i = 1; i < data.length; i++) {\r\n\t\t\t\t\tpreprocessData(tableName, 'get', data[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsuccessCallback(data);\r\n\t\t}, errorCallback);\r\n\t}\r\n\r\n\tscope.delete = function(tableName, where, successCallback, errorCallback){\r\n\t\tif(where){\r\n\t\t\tvar wheres = scope.makeWhere(where);\r\n\t\t\tvar query = \"DELETE FROM \" + validateText(tableName) + wheres[0];\r\n\t\t\tscope.SQLQuery(query, wheres[1], successCallback, errorCallback);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar query = \"TRUNCATE TABLE \" + validateText(tableName);\r\n\t\t\tscope.SQLQuery(query, [], successCallback, function(msg){\r\n\t\t\t\tif(msg.indexOf('syntax error')!==-1) // WebSQL may not support truncate function\r\n\t\t\t\t\tscope.delete(tableName, [], successCallback, errorCallback);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tscope.insert = function(tableName, object, successCallback, errorCallback){\r\n\t\tvar objectName = [];\r\n\t\tvar objectName_ = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(validateText(columns[i]));\r\n\t\t\tobjectName_.push('?');\r\n\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"INSERT INTO \" + validateText(tableName) + \" (\" + objectName.join(', ') + \") VALUES (\" + objectName_.join(', ') + \")\";\r\n\t\t\r\n\t\tscope.SQLQuery(query, objectData, successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.update = function(tableName, object, where, successCallback, errorCallback){\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar objectName = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(validateText(columns[i])+' = ?');\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"UPDATE \" + validateText(tableName) + \" SET \" + objectName.join(', ') + wheres[0];\r\n\t\tscope.SQLQuery(query, objectData.concat(wheres[1]), successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.drop = function(tableName, successCallback, errorCallback){\r\n\t\tscope.SQLQuery(\"DROP TABLE \"+validateText(tableName), [], successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.closeDatabase = function(){\r\n\t\tif(scope.polyfill) return;\r\n\t\tscope.db.close(function(){\r\n\t\t\t// Success\r\n\t\t}, function(error){\r\n\t\t\tvar msg = \"Error closing Database:\" + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n}","if(!isNode && !options.websql){\r\n\tIDBStructure(function(){\r\n\t\t// Fallback to IndexedDB\r\n\t\tWebSQLStructure();\r\n\t});\r\n}\r\n\r\nfunction IDBStructure(initError){\r\n\tIDBQueryBuilder();\r\n\r\n\tif(!window.indexedDB)\r\n  \t\twindow.indexedDB = window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n\tif(!window.IDBTransaction)\r\n\t\twindow.IDBTransaction = window.webkitIDBTransaction || window.msIDBTransaction;\r\n\tif(!window.IDBKeyRange)\r\n\t\twindow.IDBKeyRange = window.webkitIDBKeyRange || window.msIDBKeyRange;\r\n\r\n\tif(!window.indexedDB || !window.IDBTransaction || !window.IDBKeyRange){\r\n\t\tinitError();\r\n\t\treturn;\r\n\t}\r\n\r\n\tscope.storage = 'indexeddb';\r\n\tscope.db = window.indexedDB.open(databaseName, 1);\r\n\tscope.db.onerror = initError;\r\n\r\n\tscope.db.onupgradeneeded = scope.db.versionchange = function(ev){\r\n\t\tif(scope.db.result)\r\n\t\t\tscope.db = scope.db.result;\r\n\t};\r\n\r\n\tscope.db.onsuccess = function(ev){\r\n\t\tif(scope.db.result)\r\n\t\t\tscope.db = scope.db.result;\r\n\t\t\r\n\t\tcheckStructure();\r\n\t};\r\n\r\n\t//action = readwrite, readonly\r\n\tscope.getObjectStore = function(tableName, action, errorCallback){\r\n  \t\tvar transaction = scope.db.transaction(tableName, action);\r\n  \t\ttransaction.onerror = errorCallback;\r\n  \t\treturn transaction.objectStore(tableName);\r\n\t}\r\n}","if(!isNode && options.websql === undefined) options.websql = true;\r\nif(options.websql){\r\n\tWebSQLStructure(function(){\r\n\t\t// Fallback to IndexedDB\r\n\t\tIDBStructure();\r\n\t});\r\n}\r\n\r\nfunction WebSQLStructure(initError){\r\n\tSQLQueryBuilder();\r\n\r\n\tvar databaseTest = function(errorCallback){\r\n\t\tscope.initialized = true;\r\n\t\tscope.SQLQuery('select 1', [], function(data){\r\n\t\t\tscope.initialized = false;\r\n\t\t\tif(data.length)\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t \t\tinitFinish(scope);\r\n\t\t\t\t}, 1);\r\n\t\t}, function(){\r\n\t\t\tscope.initialized = false;\r\n\t\t\tif(errorCallback) errorCallback();\r\n\t\t});\r\n\t}\r\n\r\n\tscope.SQLQuery = function(query, values, successCallback, errorCallback){\r\n\t\tif(!scope.initialized){\r\n\t\t\tscope.pending.push(function(){\r\n\t\t\t\tscope.SQLQuery(query, values, successCallback, errorCallback)\r\n\t\t\t});\r\n\t\t\tclearTimeout(pendingTimer);\r\n\t\t\tpendingTimer = setTimeout(resumePending, 1000);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(options.debug) options.debug(query, values);\r\n\r\n\t\tscope.db.transaction(function(tx){\r\n\t\t\ttx.executeSql(query, values, function(tx, res){\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(successCallback){\r\n\t\t\t\t\tvar readOnly = res && res.rows ? res.rows : res; // SQLResultSetRowList is immutable\r\n\t\t\t\t\tif(res && res.rowsAffected && !readOnly.length){\r\n\t\t\t\t\t\tsuccessCallback(res.rowsAffected);\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(readOnly.length){\r\n\t\t\t\t\t\tvar result = {length:readOnly.length};\r\n\t\t\t\t\t\tfor (var i = 0; i < readOnly.length; i++) {\r\n\t\t\t\t\t\t\tresult[i] = readOnly[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\tsuccessCallback(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse successCallback([]);\r\n\t            }\r\n\t\t\t}, function(tx, error){\r\n\t\t\t\tvar msg = 'Database Error: ' + error.message;\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\t\telse console.error(msg);\r\n\t\t\t});\r\n\t\t}, function(error){\r\n\t\t\tvar msg = 'Database Transaction Error: ' + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction initializeTable(disablePlugin){\r\n\t\tif(!disablePlugin && window.sqlitePlugin){\r\n\t\t\tscope.db = window.sqlitePlugin.openDatabase({name: scope.databaseName, location: 'default'}, checkStructure, function(){\r\n\t\t\t\tconsole.error_(\"Failed to initialize sqlitePlugin\");\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tscope.initializeTable(true);\r\n\t\t\t\t}, 500);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if(window.openDatabase){\r\n\t\t\tscope.db = window.openDatabase(scope.databaseName, \"1.0\", scope.databaseName, 1024);\r\n\t\t\tif(scope.db) setTimeout(checkStructure, 500);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.error('WebSQL is not supported on this browser');\r\n\t\t\tif(initError) initError();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeTable();\r\n}","if(isNode && options.mysql === undefined) options.mysql = true;\r\nif(options.mysql){\r\n\tMySQLStructure();\r\n}\r\n\r\nfunction MySQLStructure(initError){\r\n\tSQLQueryBuilder();\r\n\r\n\tvar mysql = require('mysql');\r\n\tscope.db = mysql.createPool({\r\n\t\thost:options.host?options.host:'localhost',\r\n\t\tuser:options.user?options.user:'root',\r\n\t\tpassword:options.password?options.password:'',\r\n\t\tdatabase:databaseName\r\n\t});\r\n\r\n\tif(onConnected) scope.db.on('connection', initFinish);\r\n\tif(!options.hideInitialization)\r\n\t\tconsole.log(\"Connecting to \"+databaseName+\" database\");\r\n\r\n\tscope.SQLQuery = function(query, values, successCallback, errorCallback){\r\n\t\tif(!scope.initialized){\r\n\t\t\tscope.pending.push(function(){\r\n\t\t\t\tscope.SQLQuery(query, values, successCallback, errorCallback)\r\n\t\t\t});\r\n\t\t\tclearTimeout(pendingTimer);\r\n\t\t\tpendingTimer = setTimeout(resumePending, 1000);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(options.debug) options.debug(query, values);\r\n\r\n\t\tscope.db.getConnection(function(err1, connection){\r\n\t        if(err1){\r\n\t            connection.release();\r\n\t            if(errorCallback) errorCallback(err1);\r\n\t            else console.error(err1);\r\n\t            return;\r\n\t        }\r\n\r\n\t        connection.query(query, values, function(err, rows){\r\n\t            connection.release();\r\n\t            destroyObject(values);\r\n\t            values = null;\r\n\t            query = null;\r\n\r\n\t            if(!err&&successCallback) setTimeout(function(){\r\n\t            \tsuccessCallback(rows);\r\n\t            }, 0);\r\n\t            else if(err) setTimeout(function(){\r\n\t            \tvar error = {msg:err.sqlMessage, query:err.sql, code:err.code};\r\n\t\t            if(errorCallback) errorCallback(error);\r\n\t\t            else console.error(error);\r\n\t            }, 0);\r\n\t        });\r\n\t    });\r\n\t}\r\n}"]}