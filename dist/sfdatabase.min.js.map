{"version":3,"sources":["_head.js","IDB.js","WebSQL.js","SQL.js","_foot.js"],"names":["SFDatabase","databaseName","options","onConnected","scope","this","db","pending","initialized","debug","initFinish","setTimeout","resumePending","pendingTimer","clearTimeout","length","i","splice","destroyObject","obj","Array","objKeys","Object","keys","preprocessTable","preprocessData","tableName","mode","object","found","isNode","process","execPath","onStructureInitialize","checkStructure","callback","table","databaseStructure","queued","reduceQueue","console","error","createTable","IDBStructure","initError","IDBWhere","regexEscape","IDBLimit","prepareQuery","data","rules","ORCondition","currentCondition","rules_","matches","match","check","toLowerCase","rule","operationCondition","undefined","indexOf","likeCode","regexed","rule_","temp","slice","replace","push","exist","RegExp","join","query","processed","startFrom","limit","objectStore","where","LIMIT","ORDER","cursor","index","openCursor","key","columns","successCallback","errorCallback","objectStoreNames","contains","text","columns_","createObjectStore","keyPath","autoIncrement","col","createIndex","unique","e","insert","duplicated","objectStoreRequest","getObjectStore","add","onerror","onsuccess","ev","target","result","get","select","event","value","continue","operation","code","delete","update","drop","closeDatabase","deleteObjectStore","initializeTable","close","window","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","IDBKeyRange","webkitIDBKeyRange","msIDBKeyRange","storage","open","idbVersion","onupgradeneeded","versionchange","action","transaction","WebSQLStructure","validateText","makeWhere","comparator","children","wheres","objectData","defaultConditional","specialList","isNaN","msg","type","constructor","name","a","concat","likes","test","split","haveRelation","childs","stack","order","toUpperCase","where_","String","SQLQuery","select_","objectName","objectName_","object_","JSON","parse","stringify","polyfill","message","SQLQueryBuilder","values","tx","executeSql","res","readOnly","rows","rowsAffected","disablePlugin","sqlitePlugin","openDatabase","location","error_","websql","warn","module","exports"],"mappings":"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","file":"SFDatabase.min.js","sourcesContent":["/*\r\n\tScarletsFiction Database Library\r\n\tA simple database library for browser and nodejs\r\n\thttps://github.com/ScarletsFiction/SFDatabase-js\r\n\t\r\n\tMake sure you include this header on this script\r\n*/\r\n\r\n'use strict';\r\n\r\n// Ext-AlaSQL.js are required for browser only if the browser didn't support WebSQL\r\nfunction SFDatabase(databaseName, options, onConnected){\r\n\tvar scope = this;\r\n\tscope.db = null;\r\n\tscope.pending = [];\r\n\tscope.initialized = false;\r\n\tif(!options)\r\n\t\toptions = {debug:false};\r\n\r\n\tvar initFinish = function(){\r\n\t\tif(scope.initialized) return;\r\n\t\tscope.initialized = true;\r\n\r\n\t\tif(onConnected){\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(!onConnected(resumePending))\r\n\t\t\t\t\tresumePending();\r\n\t\t\t}, 1);\r\n\t\t}\r\n\t\telse resumePending();\r\n\t}\r\n\r\n\tvar pendingTimer = -1;\r\n\tvar resumePending = function(){\r\n\t\tif(!scope.db){\r\n\t\t\tclearTimeout(pendingTimer);\r\n\t\t\tpendingTimer = setTimeout(resumePending, 1000);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!scope.pending.length) return;\r\n\t\tfor (var i = 0; i < scope.pending.length; i++) {\r\n\t\t\tscope.pending[i]();\r\n\t\t}\r\n\t\tscope.pending.splice(0);\r\n\t}\r\n\r\n\tvar destroyObject = function(obj){\r\n\t\tif(!obj || typeof obj !== 'object') return;\r\n\t\tif(obj instanceof Array)\r\n\t\t\tobj.splice(0);\r\n\t\telse {\r\n\t\t\tvar objKeys = Object.keys(obj);\r\n\t\t\tfor (var i = 0; i < objKeys.length; i++) {\r\n\t\t\t\tdelete obj[objKeys[i]];\r\n\t\t\t}\r\n\t\t}\r\n\t\tobj = null;\r\n\t}\r\n\r\n\tscope.preprocessTable = {}; // {tableName:{columnName:{set:function, get:function}}}}\r\n\tvar preprocessData = function(tableName, mode, object){\r\n\t\tvar found = false;\r\n\t\tif(!scope.preprocessTable[tableName]) return found;\r\n\r\n\t\tvar keys = Object.keys(scope.preprocessTable[tableName]);\r\n\t\tfor (var i = 0; i < keys.length; i++) {\r\n\t\t\tif(!object[keys[i]] || !scope.preprocessTable[tableName][keys[i]][mode])\r\n\t\t\t\tcontinue;\r\n\t\t\tobject[keys[i]] = scope.preprocessTable[tableName][keys[i]][mode](object[keys[i]]);\r\n\t\t\tfound = true;\r\n\t\t}\r\n\t\treturn found;\r\n\t}\r\n\r\n\tvar isNode = typeof process !== 'undefined' && process.execPath;\r\n\tif(!isNode){\r\n\t\tvar onStructureInitialize = null;\r\n\t\tvar checkStructure = function(callback){\r\n\t\t\tvar table = Object.keys(options.databaseStructure);\r\n\r\n\t\t\tvar queued = table.length;\r\n\t\t\tvar reduceQueue = function(){\r\n\t\t\t\tqueued--;\r\n\t\t\t\tif(queued === 0){\r\n\t\t\t\t\tif(!callback) initFinish(scope);\r\n\t\t\t\t\telse callback();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif(queued > 1)\r\n\t\t\t\t\tconsole.error(\"Failed to initialize database structure\");\r\n\t\t\t}, 5000);\r\n\r\n\t\t\tfor (var i = 0; i < table.length; i++) {\r\n\t\t\t\tscope.createTable(table[i], options.databaseStructure[table[i]], reduceQueue);\r\n\t\t\t}\r\n\r\n\t\t\tif(onStructureInitialize){\r\n\t\t\t\tonStructureInitialize();\r\n\t\t\t\tonStructureInitialize = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// Load all query builder from here","if(!isNode && !options.websql){\r\n\tIDBStructure(function(){\r\n\t\t// Fallback to WebSQL\r\n\t\tconsole.warn(\"Fallback to WebSQL\");\r\n\t\tWebSQLStructure();\r\n\t});\r\n}\r\n\r\nfunction IDBStructure(initError){\r\n\tIDBQueryBuilder();\r\n\r\n\tif(!window.indexedDB)\r\n  \t\twindow.indexedDB = window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n\tif(!window.IDBTransaction)\r\n\t\twindow.IDBTransaction = window.webkitIDBTransaction || window.msIDBTransaction;\r\n\tif(!window.IDBKeyRange)\r\n\t\twindow.IDBKeyRange = window.webkitIDBKeyRange || window.msIDBKeyRange;\r\n\r\n\tif(!window.indexedDB || !window.IDBTransaction || !window.IDBKeyRange){\r\n\t\tif(initError) initError();\r\n\t\treturn;\r\n\t}\r\n\r\n\tscope.storage = 'indexeddb';\r\n\tscope.db = window.indexedDB.open(databaseName, options.idbVersion || 1);\r\n\tscope.db.onerror = initError;\r\n\r\n\tscope.db.onupgradeneeded = scope.db.versionchange = function(ev){\r\n\t\tif(scope.db.result)\r\n\t\t\tscope.db = scope.db.result;\r\n\r\n\t\tcheckStructure(function(){});\r\n\t};\r\n\r\n\tscope.db.onsuccess = function(ev){\r\n\t\tif(scope.db.result)\r\n\t\t\tscope.db = scope.db.result;\r\n\r\n\t\tcheckStructure(function(){\r\n\t\t\tinitFinish(scope);\r\n\t\t});\r\n\t};\r\n\r\n\t//action = readwrite, readonly\r\n\tscope.getObjectStore = function(tableName, action, errorCallback){\r\n  \t\tvar transaction = scope.db.transaction(tableName, action);\r\n  \t\ttransaction.onerror = errorCallback || console.error;\r\n  \t\treturn transaction.objectStore(tableName);\r\n\t}\r\n}","if(!isNode && options.websql === undefined) options.websql = true;\r\nif(options.websql){\r\n\tWebSQLStructure(function(){\r\n\t\t// Fallback to IndexedDB\r\n\t\tconsole.warn(\"Fallback to IndexedDB\");\r\n\t\tIDBStructure();\r\n\t});\r\n}\r\n\r\nfunction WebSQLStructure(initError){\r\n\tSQLQueryBuilder();\r\n\r\n\tscope.SQLQuery = function(query, values, successCallback, errorCallback){\r\n\t\tif(options.debug) options.debug(query, values);\r\n\r\n\t\tscope.db.transaction(function(tx){\r\n\t\t\ttx.executeSql(query, values, function(tx, res){\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(successCallback){\r\n\t\t\t\t\tvar readOnly = res && res.rows ? res.rows : res; // SQLResultSetRowList is immutable\r\n\t\t\t\t\tif(res && res.rowsAffected && !readOnly.length){\r\n\t\t\t\t\t\tsuccessCallback(res.rowsAffected);\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(readOnly.length){\r\n\t\t\t\t\t\tvar result = {length:readOnly.length};\r\n\t\t\t\t\t\tfor (var i = 0; i < readOnly.length; i++) {\r\n\t\t\t\t\t\t\tresult[i] = readOnly[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treadOnly = null;\r\n\t\t\t\t\t\tsuccessCallback(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse successCallback([]);\r\n\t            }\r\n\t\t\t}, function(tx, error){\r\n\t\t\t\tvar msg = 'Database Error: ' + error.message;\r\n\t\t\t\tdestroyObject(values);\r\n\t            values = query = null;\r\n\r\n\t\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\t\telse console.error(msg);\r\n\t\t\t});\r\n\t\t}, function(error){\r\n\t\t\tvar msg = 'Database Transaction Error: ' + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction initializeTable(disablePlugin){\r\n\t\tif(!disablePlugin && window.sqlitePlugin){\r\n\t\t\tscope.db = window.sqlitePlugin.openDatabase({name: databaseName, location: 'default'}, checkStructure, function(){\r\n\t\t\t\tconsole.error_(\"Failed to initialize sqlitePlugin\");\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tinitializeTable(true);\r\n\t\t\t\t}, 500);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if(window.openDatabase){\r\n\t\t\tscope.db = window.openDatabase(databaseName, \"1.0\", databaseName, 1024);\r\n\t\t\tif(scope.db) setTimeout(checkStructure, 500);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.error('WebSQL is not supported on this browser');\r\n\t\t\tif(initError) initError();\r\n\t\t}\r\n\t}\r\n\r\n\tinitializeTable();\r\n}","function SQLQueryBuilder(){\r\n\t// structure must have `scope.SQLQuery`\r\n\r\n\tfunction validateText(text){\r\n\t\tvar matches = text.match(/[a-zA-Z0-9_\\.]+/i);\r\n\t\treturn '`'+matches[0]+'`';\r\n\t}\r\n\r\n\t//{('AND', 'OR'), 'ORDER':{columnName:'ASC', 'DESC'}, 'LIMIT':[startIndex, rowsLimit]}\r\n\r\n\t// ex: [\"AND\"=>[\"id\"=>12, \"OR\"=>[\"name#1\"=>\"myself\", \"name\"=>\"himself\"]], \"LIMIT\"=>1]\r\n\t\t// Select one where (id == 12 && (name == \"myself\" || name == \"himself\"))\r\n\tscope.makeWhere = function(object, comparator, children){\r\n\t\tif(!object) return ['', []];\r\n\t\tvar wheres = [];\r\n\r\n\t\tvar objectData = [];\r\n\t\tvar columns = Object.keys(object);\r\n\t\tvar defaultConditional = ' AND ';\r\n\t\tvar specialList = ['order', 'limit'];\r\n\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tvar value = object[columns[i]];\r\n\r\n\t\t\tvar matches = columns[i].match(/([a-zA-Z0-9_\\.]+)(\\[(\\>\\=?|\\<\\=?|\\!|\\<\\>|\\>\\<|\\!?~)\\])?/);\r\n\t\t\tvar check = matches[1].toLowerCase();\r\n\t\t\tif(check==='and' || check==='or') continue;\r\n\t\t\tif(!children && specialList.indexOf(check)!==-1) continue;\r\n\r\n\t\t\tif(matches[3]){\r\n\t\t\t\tif((['>', '>=', '<', '<=']).indexOf(matches[3])!==-1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!isNaN(value))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twheres.push(matches[1] + ' ' + matches[3] + ' ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvar msg = 'SQL where: value of ' + matches[1] + ' is non-numeric and can\\'t be accepted';\r\n\t\t\t\t\t\tconsole.error(msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(matches[3] === '!')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar type = value===null || value===undefined ? false : value.constructor.name;\r\n\t\t\t\t\tif(!type)\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IS NOT NULL');\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(type==='Array'){\r\n\t\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' NOT IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse if(type==='Number' || type==='Boolean' || type==='String'){\r\n\t\t\t\t\t\t\twheres.push(matches[1] + ' != ?');\r\n\t\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type + ' can\\'t be accepted');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (matches[3] === '~' || matches[3] === '!~')\r\n\t\t\t\t{\r\n\t\t\t\t\tif(value.constructor !== Array){\r\n\t\t\t\t\t\tvalue = [value];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar likes = [];\r\n\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\tlikes.push(matches[1] + (matches[3] === '!~' ? ' NOT' : '') + ' LIKE ?');\r\n\t\t\t\t\t\tif(value.indexOf('%') === -1) value[a] = '%'+value[a]+'%';\r\n\t\t\t\t\t\tobjectData.push(value[a]);\r\n\t\t\t\t\t}\r\n\r\n                    wheres.push('('+likes.join(' OR ')+')');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar type = value===null || value===undefined ? false : value.constructor.name;\r\n\t\t\t\tif(!type)\r\n\t\t\t\t\twheres.push(matches[1] + ' IS NULL');\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(type==='Array'){\r\n\t\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\t\tfor (var a = 0; a < value.length; a++) {\r\n\t\t\t\t\t\t\ttemp.push('?');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twheres.push(matches[1] + ' IN ('+ temp.join(', ') +')');\r\n\t\t\t\t\t\tobjectData = objectData.concat(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(type==='Number' || type==='Boolean' || type==='String'){\r\n\t\t\t\t\t\twheres.push(matches[1] + ' = ?');\r\n\t\t\t\t\t\tobjectData.push(value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tconsole.error('SQL where: value ' + matches[1] + ' with type ' + type + ' can\\'t be accepted');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < columns.length; i++) {\r\n\t\t\tif(columns[i]==='ORDER'||columns[i]==='LIMIT')\r\n                continue;\r\n\r\n\t\t\tvar test = columns[i].split('AND');\r\n\t\t\tvar haveRelation = false;\r\n\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\tdefaultConditional = ' AND ';\r\n\t\t\t\thaveRelation = true;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttest = columns[i].split('OR');\r\n\t\t\t\tif(test.length === 2 && test[0] === ''){\r\n\t\t\t\t\tdefaultConditional = ' OR ';\r\n\t\t\t\t\thaveRelation = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(haveRelation){\r\n\t\t\t\tvar childs = scope.makeWhere(object[columns[i]], defaultConditional, true);\r\n\t\t\t\twheres.push('('+childs[0]+')');\r\n\t\t\t\tobjectData = objectData.concat(childs[1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar options = '';\r\n\t\tif(object['ORDER']){\r\n\t\t\tvar columns = Object.keys(object['ORDER']);\r\n\t\t\tvar stack = [];\r\n\t\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\t\tvar order = object['ORDER'][columns[i]].toUpperCase();\r\n\t\t\t\tif(order !== 'ASC' && order !== 'DESC') continue;\r\n\t\t\t\tstack.push(validateText(columns[i]) + ' ' + order);\r\n\t\t\t}\r\n\t\t\toptions = options + ' ORDER BY ' + stack.join(', ');\r\n\t\t}\r\n\t\tif(object['LIMIT']){\r\n\t\t\tif(!isNaN(object['LIMIT'][0]) && !isNaN(object['LIMIT'][1])){\r\n\t\t\t\toptions = options + ' LIMIT ' + object['LIMIT'][1] + ' OFFSET ' + object['LIMIT'][0];\r\n\t\t\t}\r\n\t\t\telse if(!isNaN(object['LIMIT'])){\r\n\t\t\t\toptions = options + ' LIMIT '+ object['LIMIT'];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar where_ = '';\r\n\t\tif(wheres.length!==0){\r\n\t\t\tif(!children)\r\n\t\t\t\twhere_ = \" WHERE \";\r\n\t\t\twhere_ = where_ + wheres.join(comparator ? comparator : defaultConditional);\r\n\t\t}\r\n\r\n\t\treturn [where_ + options, objectData];\r\n\t}\r\n\r\n\tscope.createTable = function(tableName, columns, successCallback, errorCallback)\r\n\t{\r\n\t\tvar columns_ = Object.keys(columns);\r\n\t\tfor(var i = 0; i < columns_.length; i++){\r\n\t\t\tif(columns[columns_[i]].constructor.name === 'Array')\r\n\t\t\t\tcolumns_[i] = validateText(columns_[i]) + ' ' + columns[columns_[i]].join(' ').toUpperCase();\r\n\t\t\telse\r\n\t\t\t\tcolumns_[i] = validateText(columns_[i]) + ' ' + String(columns[columns_[i]]).toUpperCase();\r\n\t\t}\r\n\t\tvar query = 'CREATE TABLE IF NOT EXISTS '+validateText(tableName)+' ('+columns_.join(', ')+')';\r\n\r\n\t\tscope.SQLQuery(query, [], successCallback, errorCallback);\r\n\t}\r\n\r\n\t//Select separated by comma\r\n\tscope.select = function(tableName, select, where, successCallback, errorCallback){\r\n\t\tvar select_ = select;\r\n\t\tif(select!=='*')\r\n\t\t\tfor(var i = 0; i < select_.length; i++){\r\n\t\t\t\tselect_[i] = validateText(select_[i]);\r\n\t\t\t}\r\n\t\telse select_ = false;\r\n\t\t\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar query = \"SELECT \" + (select_?select_.join(', '):select) + \" FROM \" + validateText(tableName) + wheres[0];\r\n\r\n\t\tscope.SQLQuery(query, wheres[1], function(data){\r\n\t\t\tif(!successCallback) return;\r\n\t\t\tif(data.length!==0 && preprocessData(tableName, 'get', data[0])){\r\n\t\t\t\tfor (var i = 1; i < data.length; i++) {\r\n\t\t\t\t\tpreprocessData(tableName, 'get', data[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsuccessCallback(data);\r\n\t\t}, errorCallback);\r\n\t}\r\n\r\n\tscope.get = function(tableName, select, where, successCallback, errorCallback){\r\n\t\twhere.LIMIT = 1;\r\n\t\treturn scope.select(tableName, select, where, successCallback, errorCallback); \r\n\t}\r\n\r\n\tscope.delete = function(tableName, where, successCallback, errorCallback){\r\n\t\tif(where){\r\n\t\t\tvar wheres = scope.makeWhere(where);\r\n\t\t\tvar query = \"DELETE FROM \" + validateText(tableName) + wheres[0];\r\n\t\t\tscope.SQLQuery(query, wheres[1], successCallback, errorCallback);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar query = \"TRUNCATE TABLE \" + validateText(tableName);\r\n\t\t\tscope.SQLQuery(query, [], successCallback, function(msg){\r\n\t\t\t\tif(msg.indexOf('syntax error')!==-1) // WebSQL may not support truncate function\r\n\t\t\t\t\tscope.delete(tableName, [], successCallback, errorCallback);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tscope.insert = function(tableName, object, successCallback, errorCallback){\r\n\t\tvar objectName = [];\r\n\t\tvar objectName_ = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(validateText(columns[i]));\r\n\t\t\tobjectName_.push('?');\r\n\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"INSERT INTO \" + validateText(tableName) + \" (\" + objectName.join(', ') + \") VALUES (\" + objectName_.join(', ') + \")\";\r\n\t\t\r\n\t\tscope.SQLQuery(query, objectData, successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.update = function(tableName, object, where, successCallback, errorCallback){\r\n\t\tvar wheres = scope.makeWhere(where);\r\n\t\tvar objectName = [];\r\n\t\tvar objectData = [];\r\n\t\tvar object_ = JSON.parse(JSON.stringify(object)); // Object copy before preprocessData\r\n\t\tvar columns = Object.keys(object_);\r\n\t\tpreprocessData(tableName, 'set', object_);\r\n\t\tfor(var i = 0; i < columns.length; i++){\r\n\t\t\tobjectName.push(validateText(columns[i])+' = ?');\r\n\t\t\tobjectData.push(object_[columns[i]]);\r\n\t\t}\r\n\t\tvar query = \"UPDATE \" + validateText(tableName) + \" SET \" + objectName.join(', ') + wheres[0];\r\n\t\tscope.SQLQuery(query, objectData.concat(wheres[1]), successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.drop = function(tableName, successCallback, errorCallback){\r\n\t\tscope.SQLQuery(\"DROP TABLE \"+validateText(tableName), [], successCallback, errorCallback);\r\n\t}\r\n\r\n\tscope.closeDatabase = function(){\r\n\t\tif(scope.polyfill) return;\r\n\t\tscope.db.close(function(){\r\n\t\t\t// Success\r\n\t\t}, function(error){\r\n\t\t\tvar msg = \"Error closing Database:\" + error.message;\r\n\t\t\tif(errorCallback) errorCallback(msg);\r\n\t\t\telse console.error(msg);\r\n\t\t});\r\n\t}\r\n}","}\r\n\r\n// isNode\r\nif(typeof process !== 'undefined' && process.execPath)\r\n\tmodule.exports = SFDatabase;"]}